{"version":3,"file":"static/js/main.fb670f66.js","mappings":"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","sources":["../node_modules/react/index.js","../node_modules/react/cjs/react.production.js","../node_modules/react-router/node_modules/cookie/src/index.ts","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.js","../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/react-router/dist/development/chunk-D4RADZKF.mjs","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/helpers/throttle.js","../node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/composeSignals.js","../node_modules/axios/lib/helpers/trackStream.js","../node_modules/axios/lib/adapters/fetch.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","webpack://thapargpt-frontend/./src/styles/MainPage.module.css?7802","components/MainPage.js","components/Login.js","components/Signup.js","components/ProfilePage.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null, V: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, createDeps, update) {\n  var dispatcher = ReactSharedInternals.H;\n  if (\"function\" === typeof update)\n    throw Error(\n      \"useEffect CRUD overload is not enabled in this build of React.\"\n    );\n  return dispatcher.useEffect(create, createDeps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.1.0\";\n","/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp =\n  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\nconst __toString = Object.prototype.toString;\n\nconst NullObject = /* @__PURE__ */ (() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})() as unknown as { new (): any };\n\n/**\n * Parse options.\n */\nexport interface ParseOptions {\n  /**\n   * Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\n   * a previously-encoded cookie value into a JavaScript string.\n   *\n   * The default function is the global `decodeURIComponent`, wrapped in a `try..catch`. If an error\n   * is thrown it will return the cookie's original value. If you provide your own encode/decode\n   * scheme you must ensure errors are appropriately handled.\n   *\n   * @default decode\n   */\n  decode?: (str: string) => string | undefined;\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nexport function parse(\n  str: string,\n  options?: ParseOptions,\n): Record<string, string | undefined> {\n  const obj: Record<string, string | undefined> = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  const dec = options?.decode || decode;\n  let index = 0;\n\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n\n    index = endIdx + 1;\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str: string, index: number, max: number) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str: string, index: number, min: number) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize options.\n */\nexport interface SerializeOptions {\n  /**\n   * Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\n   * a value into a string suited for a cookie's value, and should mirror `decode` when parsing.\n   *\n   * @default encodeURIComponent\n   */\n  encode?: (str: string) => string;\n  /**\n   * Specifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  maxAge?: number;\n  /**\n   * Specifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n   * When no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  expires?: Date;\n  /**\n   * Specifies the value for the [`Domain` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n   * When no domain is set clients consider the cookie to apply to the current domain only.\n   */\n  domain?: string;\n  /**\n   * Specifies the value for the [`Path` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n   * When no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4).\n   */\n  path?: string;\n  /**\n   * Enables the [`HttpOnly` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n   * When enabled, clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n   */\n  httpOnly?: boolean;\n  /**\n   * Enables the [`Secure` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n   * When enabled, clients will only send the cookie back if the browser has a HTTPS connection.\n   */\n  secure?: boolean;\n  /**\n   * Enables the [`Partitioned` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\n   * When enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n   *\n   * This is an attribute that has not yet been fully standardized, and may change in the future.\n   * This also means clients may ignore this attribute until they understand it. More information\n   * about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n   */\n  partitioned?: boolean;\n  /**\n   * Specifies the value for the [`Priority` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   *\n   * - `'low'` will set the `Priority` attribute to `Low`.\n   * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n   * - `'high'` will set the `Priority` attribute to `High`.\n   *\n   * More information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   */\n  priority?: \"low\" | \"medium\" | \"high\";\n  /**\n   * Specifies the value for the [`SameSite` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   *\n   * - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   * - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n   * - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n   * - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   *\n   * More information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   */\n  sameSite?: boolean | \"lax\" | \"strict\" | \"none\";\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nexport function serialize(\n  name: string,\n  val: string,\n  options?: SerializeOptions,\n): string {\n  const enc = options?.encode || encodeURIComponent;\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n\n  const value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n\n  let str = name + \"=\" + value;\n  if (!options) return str;\n\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n\n    str += \"; Domain=\" + options.domain;\n  }\n\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n\n    str += \"; Path=\" + options.path;\n  }\n\n  if (options.expires) {\n    if (\n      !isDate(options.expires) ||\n      !Number.isFinite(options.expires.valueOf())\n    ) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n\n  if (options.priority) {\n    const priority =\n      typeof options.priority === \"string\"\n        ? options.priority.toLowerCase()\n        : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n\n  if (options.sameSite) {\n    const sameSite =\n      typeof options.sameSite === \"string\"\n        ? options.sameSite.toLowerCase()\n        : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str: string): string {\n  if (str.indexOf(\"%\") === -1) return str;\n\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val: any): val is Date {\n  return __toString.call(val) === \"[object Date]\";\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.1.0\";\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"e842b67f\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"thapargpt-frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/ThaparEnv/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthapargpt_frontend\"] = self[\"webpackChunkthapargpt_frontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/**\n * react-router v7.6.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref2(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref2,\n    createURL(to) {\n      return new URL(createHref2(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href2 = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href2 + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    return createBrowserURLImpl(to);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref2(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nfunction createBrowserURLImpl(to, isAbsolute = false) {\n  let base = \"http://localhost\";\n  if (typeof window !== \"undefined\") {\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n  }\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\n  let href2 = typeof to === \"string\" ? to : createPath(to);\n  href2 = href2.replace(/ $/, \"%20\");\n  if (!isAbsolute && href2.startsWith(\"//\")) {\n    href2 = base + href2;\n  }\n  return new URL(href2, base);\n}\n\n// lib/router/utils.ts\nfunction unstable_createContext(defaultValue) {\n  return { defaultValue };\n}\nvar _map;\nvar unstable_RouterContextProvider = class {\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"unstable_middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify2 = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify2(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return stringify2(param);\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  );\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    unstable_middleware: false,\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions2 = null;\n  let getScrollRestorationKey2 = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  let initialized;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialized = true;\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  } else {\n    if (initialMatches && !init.hydrationData) {\n      let fogOfWar = checkFogOfWar(\n        initialMatches,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active) {\n        initialMatches = null;\n      }\n    }\n    if (!initialMatches) {\n      initialized = false;\n      initialMatches = [];\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    } else if (initialMatches.some((m) => m.route.lazy)) {\n      initialized = false;\n    } else if (!initialMatches.some((m) => m.route.loader)) {\n      initialized = true;\n    } else {\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\n      if (errors) {\n        let idx = initialMatches.findIndex(\n          (m) => errors[m.route.id] !== void 0\n        );\n        initialized = initialMatches.slice(0, idx + 1).every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      } else {\n        initialized = initialMatches.every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      }\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser2) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = new unstable_RouterContextProvider(\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\n    );\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties2,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [\n          boundaryMatch.route.id,\n          result,\n          actionMatch.route.id\n        ]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties2,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href2, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href2,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let scopedContext = new unstable_RouterContextProvider(\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\n    );\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties2,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser2) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = createBrowserURLImpl(location, true);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    if (request.signal.aborted) {\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions2 = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey2 = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions2 = null;\n      getScrollPosition = null;\n      getScrollRestorationKey2 = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey2) {\n      let key = getScrollRestorationKey2(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions2 && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions2[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions2) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions2[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    unstable_respond: respond\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return respond ? respond(staticContext) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return respond ? respond(staticContext) : staticContext;\n    }\n    if (respond && matches.some(\n      (m) => m.route.unstable_middleware || typeof m.route.lazy === \"object\" && m.route.lazy.unstable_middleware\n    )) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      try {\n        await loadLazyMiddlewareForMatches(\n          matches,\n          manifest,\n          mapRouteProperties2\n        );\n        let renderedStaticContext;\n        let response = await runMiddlewarePipeline(\n          {\n            request,\n            matches,\n            params: matches[0].params,\n            // If we're calling middleware then it must be enabled so we can cast\n            // this to the proper type knowing it's not an `AppLoadContext`\n            context: requestContext\n          },\n          true,\n          async () => {\n            let result2 = await queryImpl(\n              request,\n              location,\n              matches,\n              requestContext,\n              dataStrategy || null,\n              skipLoaderErrorBubbling === true,\n              null,\n              filterMatchesToLoad || null,\n              skipRevalidation === true\n            );\n            if (isResponse(result2)) {\n              return result2;\n            }\n            renderedStaticContext = { location, basename, ...result2 };\n            let res = await respond(renderedStaticContext);\n            return res;\n          },\n          async (error, routeId) => {\n            if (isResponse(error)) {\n              return error;\n            }\n            if (renderedStaticContext) {\n              if (routeId in renderedStaticContext.loaderData) {\n                renderedStaticContext.loaderData[routeId] = void 0;\n              }\n              return respond(\n                getStaticContextFromError(\n                  dataRoutes,\n                  renderedStaticContext,\n                  error,\n                  skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id\n                )\n              );\n            } else {\n              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(\n                matches,\n                matches.find(\n                  (m) => m.route.id === routeId || m.route.loader\n                )?.route.id || routeId\n              ).route.id;\n              return respond({\n                matches,\n                location,\n                basename,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                  [boundaryRouteId]: error\n                },\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\n                actionHeaders: {},\n                loaderHeaders: {}\n              });\n            }\n          }\n        );\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null,\n      filterMatchesToLoad || null,\n      skipRevalidation === true\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    unstable_respond: respond\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    if (respond && matches.some(\n      (m) => m.route.unstable_middleware || typeof m.route.lazy === \"object\" && m.route.lazy.unstable_middleware\n    )) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);\n      let response = await runMiddlewarePipeline(\n        {\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        },\n        true,\n        async () => {\n          let result2 = await queryImpl(\n            request,\n            location,\n            matches,\n            requestContext,\n            dataStrategy || null,\n            false,\n            match,\n            null,\n            false\n          );\n          if (isResponse(result2)) {\n            return respond(result2);\n          }\n          let error2 = result2.errors ? Object.values(result2.errors)[0] : void 0;\n          if (error2 !== void 0) {\n            throw error2;\n          }\n          let value = result2.actionData ? Object.values(result2.actionData)[0] : Object.values(result2.loaderData)[0];\n          return typeof value === \"string\" ? new Response(value) : Response.json(value);\n        },\n        (error2) => {\n          if (isResponse(error2)) {\n            return respond(error2);\n          }\n          return new Response(String(error2), {\n            status: 500,\n            statusText: \"Unexpected Server Error\"\n          });\n        }\n      );\n      return response;\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match,\n      null,\n      false\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\n    if (error !== void 0) {\n      throw error;\n    }\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      return Object.values(result.loaderData)[0];\n    }\n    return void 0;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null,\n          filterMatchesToLoad,\n          skipRevalidation\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch,\n        filterMatchesToLoad\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        [],\n        requestContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        filterMatchesToLoad,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null,\n      filterMatchesToLoad\n    );\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        routeMatch,\n        [],\n        requestContext\n      );\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\n        // Up to but not including the boundary\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\n      ) : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(\n            mapRouteProperties2,\n            manifest,\n            request,\n            match,\n            [],\n            requestContext,\n            false\n          );\n        }\n        return getDataStrategyMatch(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          [],\n          requestContext,\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\n        );\n      });\n    }\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      request,\n      dsMatches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      request,\n      matches,\n      null,\n      requestContext,\n      true\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          throw result;\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties2,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && route.id in loaderData;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(\n    (newRoute) => !childrenToPatch.some(\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\n    )\n  );\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties2,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  lazyRoutePromise?.catch(() => {\n  });\n  lazyHandlerPromise?.catch(() => {\n  });\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {\n  let promises = matches.map(({ route }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"unstable_middleware\",\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runMiddlewarePipeline(\n    args,\n    false,\n    () => defaultDataStrategy(args),\n    (error, routeId) => ({ [routeId]: { type: \"error\", result: error } })\n  );\n}\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\n  let { matches, request, params, context } = args;\n  let middlewareState = {\n    handlerResult: void 0\n  };\n  try {\n    let tuples = matches.flatMap(\n      (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n    );\n    let result = await callRouteMiddleware(\n      { request, params, context },\n      tuples,\n      propagateResult,\n      middlewareState,\n      handler\n    );\n    return propagateResult ? result : middlewareState.handlerResult;\n  } catch (e) {\n    if (!middlewareState.middlewareError) {\n      throw e;\n    }\n    let result = await errorHandler(\n      middlewareState.middlewareError.error,\n      middlewareState.middlewareError.routeId\n    );\n    if (propagateResult || !middlewareState.handlerResult) {\n      return result;\n    }\n    return Object.assign(middlewareState.handlerResult, result);\n  }\n}\nasync function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n    );\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    middlewareState.handlerResult = await handler();\n    return middlewareState.handlerResult;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let nextResult = void 0;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    let result = await callRouteMiddleware(\n      args,\n      middlewares,\n      propagateResult,\n      middlewareState,\n      handler,\n      idx + 1\n    );\n    if (propagateResult) {\n      nextResult = result;\n      return nextResult;\n    }\n  };\n  try {\n    let result = await middleware(\n      {\n        request: args.request,\n        params: args.params,\n        context: args.context\n      },\n      next\n    );\n    if (nextCalled) {\n      if (result === void 0) {\n        return nextResult;\n      } else {\n        return result;\n      }\n    } else {\n      return next();\n    }\n  } catch (error) {\n    if (!middlewareState.middlewareError) {\n      middlewareState.middlewareError = { routeId, error };\n    } else if (middlewareState.middlewareError.error !== error) {\n      middlewareState.middlewareError = { routeId, error };\n    }\n    throw error;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties2,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties2,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runMiddlewarePipeline(\n      typedDataStrategyArgs,\n      false,\n      () => cb({\n        ...typedDataStrategyArgs,\n        fetcherKey,\n        unstable_runClientMiddleware: () => {\n          throw new Error(\n            \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\n          );\n        }\n      }),\n      (error, routeId) => ({\n        [routeId]: { type: \"error\", result: error }\n      })\n    );\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [m._lazyPromises?.handler, m._lazyPromises?.route])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    if (pendingActionResult[2]) {\n      loaderData[pendingActionResult[2]] = void 0;\n    }\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nimport * as React3 from \"react\";\n\n// lib/context.ts\nimport * as React from \"react\";\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\nvar ENABLE_DEV_WARNINGS = true;\n\n// lib/hooks.tsx\nimport * as React2 from \"react\";\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React2.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React2.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React2.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React2.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React2.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React2.createContext(null);\nfunction useOutletContext() {\n  return React2.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React2.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let { matches } = React2.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React2.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator, static: isStatic } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */ React2.createElement(\n        RenderedRoute,\n        {\n          match,\n          routeContext: {\n            outlet,\n            matches: matches2,\n            isDataRoute: dataRouterState != null\n          },\n          children\n        }\n      );\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n      RenderErrorBoundary,\n      {\n        location: dataRouterState.location,\n        revalidation: dataRouterState.revalidation,\n        component: errorElement,\n        error,\n        children: getChildren(),\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\n      }\n    ) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React2.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  let revalidate = React2.useCallback(async () => {\n    await dataRouterContext.router.revalidate();\n  }, [dataRouterContext.router]);\n  return React2.useMemo(\n    () => ({ revalidate, state: state.revalidation }),\n    [revalidate, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React2.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nfunction useAsyncValue() {\n  let value = React2.useContext(AwaitContext);\n  return value?._data;\n}\nfunction useAsyncError() {\n  let value = React2.useContext(AwaitContext);\n  return value?._error;\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\n  let blockerFunction = React2.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React2.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React2.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\n  \"HydrateFallback\",\n  \"hydrateFallbackElement\"\n];\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n  }).initialize();\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync) {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        } else {\n          React3.startTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\n  );\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename\n    }),\n    [router, navigator, basename]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}) {\n  let historyRef = React3.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React3.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React3.useCallback(\n    (newState) => {\n      React3.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction Navigate({\n  to,\n  replace: replace2,\n  state,\n  relative\n}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n  let { static: isStatic } = React3.useContext(NavigationContext);\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\n  );\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n  React3.useEffect(() => {\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\n  }, [navigate, jsonPath, relative, replace2, state]);\n  return null;\n}\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\nfunction Route(_props) {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\nfunction Routes({\n  children,\n  location\n}) {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\nfunction Await({\n  children,\n  errorElement,\n  resolve\n}) {\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\n}\nvar AwaitErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    let { children, errorElement, resolve } = this.props;\n    let promise = null;\n    let status = 0 /* pending */;\n    if (!(resolve instanceof Promise)) {\n      status = 1 /* success */;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      status = 2 /* error */;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {\n      });\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if (resolve._tracked) {\n      promise = resolve;\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\n    } else {\n      status = 0 /* pending */;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n    if (status === 2 /* error */ && !errorElement) {\n      throw promise._error;\n    }\n    if (status === 2 /* error */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\n    }\n    if (status === 1 /* success */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\n    }\n    throw promise;\n  }\n};\nfunction ResolveAwait({\n  children\n}) {\n  let data2 = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data2) : children;\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\n}\nfunction createRoutesFromChildren(children, parentPath = []) {\n  let routes = [];\n  React3.Children.forEach(children, (element, index) => {\n    if (!React3.isValidElement(element)) {\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React3.Fragment) {\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n    invariant(\n      element.type === Route,\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\n      HydrateFallback: element.props.HydrateFallback,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n    routes.push(route);\n  });\n  return routes;\n}\nvar createRoutesFromElements = createRoutesFromChildren;\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\n// lib/dom/lib.tsx\nimport * as React10 from \"react\";\n\n// lib/dom/dom.ts\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && // Ignore everything but left clicks\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event);\n}\nfunction createSearchParams(init = \"\") {\n  return new URLSearchParams(\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\n      let value = init[key];\n      return memo2.concat(\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n      );\n    }, [])\n  );\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\n    );\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(form, target);\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = void 0;\n  }\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n\n// lib/dom/ssr/components.tsx\nimport * as React9 from \"react\";\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    import.meta.hot) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 })) : [],\n      module?.links?.() || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: currentMatches[0]?.params || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nimport * as React4 from \"react\";\n\n// vendor/turbo-stream-v2/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred2 = class {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// vendor/turbo-stream-v2/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            str[index2] = `[\"${TYPE_DATE}\",${input2.getTime()}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// vendor/turbo-stream-v2/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = value.length - 1; i > 0; i--)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = value.length - 2; i > 0; i -= 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred2();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// vendor/turbo-stream-v2/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred2();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value) continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder2 = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder2, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder2.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder2.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      if (Object.keys(encoder2.deferred).length) {\n        let raceDone;\n        const racePromise = new Promise((resolve, reject) => {\n          raceDone = resolve;\n          if (signal) {\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\n            if (signal.aborted) {\n              rejectPromise();\n            } else {\n              signal.addEventListener(\"abort\", (event) => {\n                rejectPromise();\n              });\n            }\n          }\n        });\n        while (Object.keys(encoder2.deferred).length > 0) {\n          for (const [deferredId, deferred] of Object.entries(\n            encoder2.deferred\n          )) {\n            if (seenPromises.has(deferred)) continue;\n            seenPromises.add(\n              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n              encoder2.deferred[Number(deferredId)] = Promise.race([\n                racePromise,\n                deferred\n              ]).then(\n                (resolved) => {\n                  const id2 = flatten.call(encoder2, resolved);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder2.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder2.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder2.stringified.length - 1;\n                  }\n                },\n                (reason) => {\n                  if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                    reason = new Error(\"An unknown error occurred\");\n                  }\n                  const id2 = flatten.call(encoder2, reason);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder2.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\n`)\n                    );\n                  } else {\n                    const values = encoder2.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder2.stringified.length - 1;\n                  }\n                }\n              ).finally(() => {\n                delete encoder2.deferred[Number(deferredId)];\n              })\n            );\n          }\n          await Promise.race(Object.values(encoder2.deferred));\n        }\n        raceDone();\n      }\n      await Promise.all(Object.values(encoder2.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SingleFetchNoResultError = class extends Error {\n};\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      invariant2(manifestRoute, \"Route not found in manifest\");\n      let routeModule = routeModules[match.route.id];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)\n      };\n    },\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({ routes: {} });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  await bubbleMiddlewareErrors(\n    singleFetchDfd.promise,\n    args.matches,\n    routesParams,\n    results\n  );\n  return results;\n}\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\n  try {\n    let middlewareError;\n    let fetchedData = await singleFetchPromise;\n    if (\"routes\" in fetchedData) {\n      for (let match of matches) {\n        if (match.route.id in fetchedData.routes) {\n          let routeResult = fetchedData.routes[match.route.id];\n          if (\"error\" in routeResult) {\n            middlewareError = routeResult.error;\n            break;\n          }\n        }\n      }\n    }\n    if (middlewareError !== void 0) {\n      Array.from(routesParams.values()).forEach((routeId) => {\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\n          results[routeId].result = middlewareError;\n        }\n      });\n    }\n  } catch (e) {\n  }\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename);\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global2) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global2 && typeof global2[name] === \"function\") {\n            Constructor = global2[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (routeResult == null) {\n    throw new SingleFetchNoResultError(\n      `No result found for routeId \"${routeId}\"`\n    );\n  } else if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nimport * as React8 from \"react\";\n\n// lib/dom/ssr/routes.tsx\nimport * as React7 from \"react\";\n\n// lib/dom/ssr/errorBoundaries.tsx\nimport * as React5 from \"react\";\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React5.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React5.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React5.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nimport * as React6 from \"react\";\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ React6.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ) : null);\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route.id,\n        routeModule.clientLoader,\n        route.hasLoader,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ) : await getLazyRoute();\n          invariant2(\n            unstable_clientMiddleware,\n            \"No `unstable_clientMiddleware` export found\"\n          );\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      routeDiscovery.manifestPath,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet\n    window.navigator?.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          routeDiscovery.manifestPath,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\n}\nfunction getManifestPath(_manifestPath, basename) {\n  let manifestPath = _manifestPath || \"/__manifest\";\n  if (basename == null) {\n    return manifestPath;\n  }\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\n  let url = new URL(\n    getManifestPath(manifestPath, basename),\n    window.location.origin\n  );\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\n          \"Unable to discover routes due to manifest version mismatch.\"\n        );\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      console.warn(\"Detected manifest version mismatch, reloading...\");\n      await new Promise(() => {\n      });\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React9.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React9.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React9.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React9.useRef(null);\n  React9.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React9.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nfunction Links() {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React9.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React9.createElement(\"style\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React9.createElement(\"link\", { rel: \"stylesheet\", href: criticalCss.href }) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React9.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\n  ));\n}\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let { router } = useDataRouterContext2();\n  let matches = React9.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React9.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React9.useState([]);\n  React9.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { basename } = useDataRouterContext2();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React9.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React9.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React9.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename);\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    basename,\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React9.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, dataHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"prefetch\", as: \"fetch\", href: href2, ...linkProps })), moduleHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"modulepreload\", href: href2, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule?.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React9.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React9.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React9.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React9.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: json }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React9.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta,\n    routeDiscovery,\n    ssr\n  } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React9.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/lib.tsx\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n  if (isBrowser) {\n    window.__reactRouterVersion = \"7.6.0\";\n  }\n} catch (e) {\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors)\n    };\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction BrowserRouter({\n  basename,\n  children,\n  window: window2\n}) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HashRouter({ basename, children, window: window2 }) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HistoryRouter({\n  basename,\n  children,\n  history\n}) {\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar Link = React10.forwardRef(\n  function LinkWithRef({\n    onClick,\n    discover = \"render\",\n    prefetch = \"none\",\n    relative,\n    reloadDocument,\n    replace: replace2,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition,\n    ...rest\n  }, forwardedRef) {\n    let { basename } = React10.useContext(NavigationContext);\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n      absoluteHref = to;\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n    let href2 = useHref(to, { relative });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\n      prefetch,\n      rest\n    );\n    let internalOnClick = useLinkClickHandler(to, {\n      replace: replace2,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    let link = (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      /* @__PURE__ */ React10.createElement(\n        \"a\",\n        {\n          ...rest,\n          ...prefetchHandlers,\n          href: absoluteHref || href2,\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\n          ref: mergeRefs(forwardedRef, prefetchRef),\n          target,\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n        }\n      )\n    );\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href2 })) : link;\n  }\n);\nLink.displayName = \"Link\";\nvar NavLink = React10.forwardRef(\n  function NavLinkWithRef({\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children,\n    ...rest\n  }, ref) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React10.useContext(DataRouterStateContext);\n    let { navigator, basename } = React10.useContext(NavigationContext);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n      ].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ React10.createElement(\n      Link,\n      {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className,\n        ref,\n        style,\n        to,\n        viewTransition\n      },\n      typeof children === \"function\" ? children(renderProps) : children\n    );\n  }\n);\nNavLink.displayName = \"NavLink\";\nvar Form = React10.forwardRef(\n  ({\n    discover = \"render\",\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace: replace2,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition,\n    ...props\n  }, forwardedRef) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace: replace2,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /* @__PURE__ */ React10.createElement(\n      \"form\",\n      {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n      }\n    );\n  }\n);\nForm.displayName = \"Form\";\nfunction ScrollRestoration({\n  getKey,\n  storageKey,\n  ...props\n}) {\n  let remixContext = React10.useContext(FrameworkContext);\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  useScrollRestoration({ getKey, storageKey });\n  let ssrKey = React10.useMemo(\n    () => {\n      if (!remixContext || !getKey) return null;\n      let userKey = getScrollRestorationKey(\n        location,\n        matches,\n        basename,\n        getKey\n      );\n      return userKey !== location.key ? userKey : null;\n    },\n    // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  if (!remixContext || remixContext.isSpaMode) {\n    return null;\n  }\n  let restoreScroll = ((storageKey2, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({ key }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(storageKey2);\n    }\n  }).toString();\n  return /* @__PURE__ */ React10.createElement(\n    \"script\",\n    {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `(${restoreScroll})(${JSON.stringify(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        )}, ${JSON.stringify(ssrKey)})`\n      }\n    }\n  );\n}\nScrollRestoration.displayName = \"ScrollRestoration\";\nfunction getDataRouterConsoleError2(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext3(hookName) {\n  let ctx = React10.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError2(hookName));\n  return ctx;\n}\nfunction useDataRouterState2(hookName) {\n  let state = React10.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError2(hookName));\n  return state;\n}\nfunction useLinkClickHandler(to, {\n  target,\n  replace: replaceProp,\n  state,\n  preventScrollReset,\n  relative,\n  viewTransition\n} = {}) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n  return React10.useCallback(\n    (event) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace2,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition\n    ]\n  );\n}\nfunction useSearchParams(defaultInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\n  );\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React10.useRef(false);\n  let location = useLocation();\n  let searchParams = React10.useMemo(\n    () => (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      )\n    ),\n    [location.search]\n  );\n  let navigate = useNavigate();\n  let setSearchParams = React10.useCallback(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n  return [searchParams, setSearchParams];\n}\nvar fetcherId = 0;\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\nfunction useSubmit() {\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\n  let { basename } = React10.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n  return React10.useCallback(\n    async (target, options = {}) => {\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        await router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        await router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\nfunction useFormAction(action, { relative } = {}) {\n  let { basename } = React10.useContext(NavigationContext);\n  let routeContext = React10.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n  let [match] = routeContext.matches.slice(-1);\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n  let location = useLocation();\n  if (action == null) {\n    path.search = location.search;\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction useFetcher({\n  key\n} = {}) {\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\n  let fetcherData = React10.useContext(FetchersContext);\n  let route = React10.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n  let defaultKey = React10.useId();\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  }\n  React10.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => router.deleteFetcher(fetcherKey);\n  }, [router, fetcherKey]);\n  let load = React10.useCallback(\n    async (href2, opts) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      await router.fetch(fetcherKey, routeId, href2, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n  let submitImpl = useSubmit();\n  let submit = React10.useCallback(\n    async (target, opts) => {\n      await submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n  let FetcherForm = React10.useMemo(() => {\n    let FetcherForm2 = React10.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\n      }\n    );\n    FetcherForm2.displayName = \"fetcher.Form\";\n    return FetcherForm2;\n  }, [fetcherKey]);\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data2 = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React10.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data: data2\n    }),\n    [FetcherForm, submit, load, fetcher, data2]\n  );\n  return fetcherWithComponents;\n}\nfunction useFetchers() {\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key\n  }));\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\n  let key = null;\n  if (getKey) {\n    if (basename !== \"/\") {\n      key = getKey(\n        {\n          ...location,\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        },\n        matches\n      );\n    } else {\n      key = getKey(location, matches);\n    }\n  }\n  if (key == null) {\n    key = location.key;\n  }\n  return key;\n}\nfunction useScrollRestoration({\n  getKey,\n  storageKey\n} = {}) {\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\n    \"useScrollRestoration\" /* UseScrollRestoration */\n  );\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  React10.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  usePageHide(\n    React10.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\n  );\n  if (typeof document !== \"undefined\") {\n    React10.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n      }\n    }, [storageKey]);\n    React10.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    React10.useLayoutEffect(() => {\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      if (preventScrollReset === true) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\nfunction useBeforeUnload(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePageHide(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePrompt({\n  when,\n  message\n}) {\n  let blocker = useBlocker(when);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\nfunction useViewTransitionState(to, opts = {}) {\n  let vtContext = React10.useContext(ViewTransitionContext);\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n  let { basename } = useDataRouterContext3(\n    \"useViewTransitionState\" /* useViewTransitionState */\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n\n// lib/dom/server.tsx\nimport * as React11 from \"react\";\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = \"POP\" /* Pop */;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state != null ? locationProp.state : null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location,\n      navigationType: action,\n      navigator: staticNavigator,\n      static: true\n    }\n  );\n}\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate: hydrate2 = true,\n  nonce\n}) {\n  invariant(\n    router && context,\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\n  );\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let fetchersContext = /* @__PURE__ */ new Map();\n  let hydrateScript = \"\";\n  if (hydrate2 !== false) {\n    let data2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let { state } = dataRouterContext.router;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename: dataRouterContext.basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: dataRouterContext.navigator,\n      static: dataRouterContext.static\n    },\n    /* @__PURE__ */ React11.createElement(\n      DataRoutes2,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      nonce,\n      dangerouslySetInnerHTML: { __html: hydrateScript }\n    }\n  ) : null);\n}\nfunction DataRoutes2({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\n      );\n    },\n    go(delta) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\n      );\n    }\n  };\n}\nfunction createStaticHandler2(routes, opts) {\n  return createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context, opts = {}) {\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let matches = context.matches.map((match) => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get future() {\n      return {\n        unstable_middleware: false,\n        ...opts?.future\n      };\n    },\n    get state() {\n      return {\n        historyAction: \"POP\" /* Pop */,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return void 0;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    patchRoutes() {\n      throw msg(\"patchRoutes\");\n    },\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  let href2 = typeof to === \"string\" ? to : createPath(to);\n  href2 = href2.replace(/ $/, \"%20\");\n  let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, \"http://localhost\");\n  return {\n    pathname: encoded.pathname,\n    search: encoded.search,\n    hash: encoded.hash\n  };\n}\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar ESCAPE_LOOKUP2 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\n}\n\n// lib/dom/ssr/server.tsx\nimport * as React12 from \"react\";\nfunction ServerRouter({\n  context,\n  url,\n  nonce\n}) {\n  if (typeof url === \"string\") {\n    url = new URL(url);\n  }\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\n  let routes = createServerRoutes(\n    manifest.routes,\n    routeModules,\n    context.future,\n    context.isSpaMode\n  );\n  context.staticHandlerContext.loaderData = {\n    ...context.staticHandlerContext.loaderData\n  };\n  for (let match of context.staticHandlerContext.matches) {\n    let routeId = match.route.id;\n    let route = routeModules[routeId];\n    let manifestRoute = context.manifest.routes[routeId];\n    if (route && manifestRoute && shouldHydrateRouteLoader(\n      routeId,\n      route.clientLoader,\n      manifestRoute.hasLoader,\n      context.isSpaMode\n    ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n      delete context.staticHandlerContext.loaderData[routeId];\n    }\n  }\n  let router = createStaticRouter(routes, context.staticHandlerContext);\n  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement(\n    FrameworkContext.Provider,\n    {\n      value: {\n        manifest,\n        routeModules,\n        criticalCss,\n        serverHandoffString,\n        future: context.future,\n        ssr: context.ssr,\n        isSpaMode: context.isSpaMode,\n        routeDiscovery: context.routeDiscovery,\n        serializeError: context.serializeError,\n        renderMeta: context.renderMeta\n      }\n    },\n    /* @__PURE__ */ React12.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ React12.createElement(\n      StaticRouterProvider,\n      {\n        router,\n        context: context.staticHandlerContext,\n        hydrate: false\n      }\n    ))\n  ), context.serverHandoffStream ? /* @__PURE__ */ React12.createElement(React12.Suspense, null, /* @__PURE__ */ React12.createElement(\n    StreamTransfer,\n    {\n      context,\n      identifier: 0,\n      reader: context.serverHandoffStream.getReader(),\n      textDecoder: new TextDecoder(),\n      nonce\n    }\n  )) : null);\n}\n\n// lib/dom/ssr/routes-test-stub.tsx\nimport * as React13 from \"react\";\nfunction createRoutesStub(routes, unstable_getContext) {\n  return function RoutesTestStub({\n    initialEntries,\n    initialIndex,\n    hydrationData,\n    future\n  }) {\n    let routerRef = React13.useRef();\n    let remixContextRef = React13.useRef();\n    if (routerRef.current == null) {\n      remixContextRef.current = {\n        future: {\n          unstable_subResourceIntegrity: future?.unstable_subResourceIntegrity === true,\n          unstable_middleware: future?.unstable_middleware === true\n        },\n        manifest: {\n          routes: {},\n          entry: { imports: [], module: \"\" },\n          url: \"\",\n          version: \"\"\n        },\n        routeModules: {},\n        ssr: false,\n        isSpaMode: false,\n        routeDiscovery: { mode: \"lazy\", manifestPath: \"/__manifest\" }\n      };\n      let patched = processRoutes(\n        // @ts-expect-error `StubRouteObject` is stricter about `loader`/`action`\n        // types compared to `AgnosticRouteObject`\n        convertRoutesToDataRoutes(routes, (r) => r),\n        remixContextRef.current.manifest,\n        remixContextRef.current.routeModules\n      );\n      routerRef.current = createMemoryRouter(patched, {\n        unstable_getContext,\n        initialEntries,\n        initialIndex,\n        hydrationData\n      });\n    }\n    return /* @__PURE__ */ React13.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ React13.createElement(RouterProvider, { router: routerRef.current }));\n  };\n}\nfunction withComponentProps(Component4) {\n  return function Wrapped() {\n    return React13.createElement(Component4, {\n      params: useParams(),\n      loaderData: useLoaderData(),\n      actionData: useActionData(),\n      matches: useMatches()\n    });\n  };\n}\nfunction withHydrateFallbackProps(HydrateFallback) {\n  return function Wrapped() {\n    const props = {\n      params: useParams(),\n      loaderData: useLoaderData(),\n      actionData: useActionData()\n    };\n    return React13.createElement(HydrateFallback, props);\n  };\n}\nfunction withErrorBoundaryProps(ErrorBoundary) {\n  return function Wrapped() {\n    const props = {\n      params: useParams(),\n      loaderData: useLoaderData(),\n      actionData: useActionData(),\n      error: useRouteError()\n    };\n    return React13.createElement(ErrorBoundary, props);\n  };\n}\nfunction processRoutes(routes, manifest, routeModules, parentId) {\n  return routes.map((route) => {\n    if (!route.id) {\n      throw new Error(\n        \"Expected a route.id in @remix-run/testing processRoutes() function\"\n      );\n    }\n    let newRoute = {\n      id: route.id,\n      path: route.path,\n      index: route.index,\n      Component: route.Component ? withComponentProps(route.Component) : void 0,\n      HydrateFallback: route.HydrateFallback ? withHydrateFallbackProps(route.HydrateFallback) : void 0,\n      ErrorBoundary: route.ErrorBoundary ? withErrorBoundaryProps(route.ErrorBoundary) : void 0,\n      action: route.action,\n      loader: route.loader,\n      handle: route.handle,\n      shouldRevalidate: route.shouldRevalidate\n    };\n    let entryRoute = {\n      id: route.id,\n      path: route.path,\n      index: route.index,\n      parentId,\n      hasAction: route.action != null,\n      hasLoader: route.loader != null,\n      // When testing routes, you should be stubbing loader/action/middleware,\n      // not trying to re-implement the full loader/clientLoader/SSR/hydration\n      // flow. That is better tested via E2E tests.\n      hasClientAction: false,\n      hasClientLoader: false,\n      hasClientMiddleware: false,\n      hasErrorBoundary: route.ErrorBoundary != null,\n      // any need for these?\n      module: \"build/stub-path-to-module.js\",\n      clientActionModule: void 0,\n      clientLoaderModule: void 0,\n      clientMiddlewareModule: void 0,\n      hydrateFallbackModule: void 0\n    };\n    manifest.routes[newRoute.id] = entryRoute;\n    routeModules[route.id] = {\n      default: newRoute.Component || Outlet,\n      ErrorBoundary: newRoute.ErrorBoundary || void 0,\n      handle: route.handle,\n      links: route.links,\n      meta: route.meta,\n      shouldRevalidate: route.shouldRevalidate\n    };\n    if (route.children) {\n      newRoute.children = processRoutes(\n        route.children,\n        manifest,\n        routeModules,\n        newRoute.id\n      );\n    }\n    return newRoute;\n  });\n}\n\n// lib/server-runtime/cookies.ts\nimport { parse, serialize } from \"cookie\";\n\n// lib/server-runtime/crypto.ts\nvar encoder = /* @__PURE__ */ new TextEncoder();\nvar sign = async (value, secret) => {\n  let data2 = encoder.encode(value);\n  let key = await createKey2(secret, [\"sign\"]);\n  let signature = await crypto.subtle.sign(\"HMAC\", key, data2);\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\n    /=+$/,\n    \"\"\n  );\n  return value + \".\" + hash;\n};\nvar unsign = async (cookie, secret) => {\n  let index = cookie.lastIndexOf(\".\");\n  let value = cookie.slice(0, index);\n  let hash = cookie.slice(index + 1);\n  let data2 = encoder.encode(value);\n  let key = await createKey2(secret, [\"verify\"]);\n  let signature = byteStringToUint8Array(atob(hash));\n  let valid = await crypto.subtle.verify(\"HMAC\", key, signature, data2);\n  return valid ? value : false;\n};\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\n  \"raw\",\n  encoder.encode(secret),\n  { name: \"HMAC\", hash: \"SHA-256\" },\n  false,\n  usages\n);\nfunction byteStringToUint8Array(byteString) {\n  let array = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    array[i] = byteString.charCodeAt(i);\n  }\n  return array;\n}\n\n// lib/server-runtime/cookies.ts\nvar createCookie = (name, cookieOptions = {}) => {\n  let { secrets = [], ...options } = {\n    path: \"/\",\n    sameSite: \"lax\",\n    ...cookieOptions\n  };\n  warnOnceAboutExpiresCookie(name, options.expires);\n  return {\n    get name() {\n      return name;\n    },\n    get isSigned() {\n      return secrets.length > 0;\n    },\n    get expires() {\n      return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\n    },\n    async parse(cookieHeader, parseOptions) {\n      if (!cookieHeader) return null;\n      let cookies = parse(cookieHeader, { ...options, ...parseOptions });\n      if (name in cookies) {\n        let value = cookies[name];\n        if (typeof value === \"string\" && value !== \"\") {\n          let decoded = await decodeCookieValue(value, secrets);\n          return decoded;\n        } else {\n          return \"\";\n        }\n      } else {\n        return null;\n      }\n    },\n    async serialize(value, serializeOptions) {\n      return serialize(\n        name,\n        value === \"\" ? \"\" : await encodeCookieValue(value, secrets),\n        {\n          ...options,\n          ...serializeOptions\n        }\n      );\n    }\n  };\n};\nvar isCookie = (object) => {\n  return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\n};\nasync function encodeCookieValue(value, secrets) {\n  let encoded = encodeData(value);\n  if (secrets.length > 0) {\n    encoded = await sign(encoded, secrets[0]);\n  }\n  return encoded;\n}\nasync function decodeCookieValue(value, secrets) {\n  if (secrets.length > 0) {\n    for (let secret of secrets) {\n      let unsignedValue = await unsign(value, secret);\n      if (unsignedValue !== false) {\n        return decodeData(unsignedValue);\n      }\n    }\n    return null;\n  }\n  return decodeData(value);\n}\nfunction encodeData(value) {\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\n}\nfunction decodeData(value) {\n  try {\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\n  } catch (error) {\n    return {};\n  }\n}\nfunction myEscape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, code;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (/[\\w*+\\-./@]/.exec(chr)) {\n      result += chr;\n    } else {\n      code = chr.charCodeAt(0);\n      if (code < 256) {\n        result += \"%\" + hex(code, 2);\n      } else {\n        result += \"%u\" + hex(code, 4).toUpperCase();\n      }\n    }\n  }\n  return result;\n}\nfunction hex(code, length) {\n  let result = code.toString(16);\n  while (result.length < length) result = \"0\" + result;\n  return result;\n}\nfunction myUnescape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, part;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (chr === \"%\") {\n      if (str.charAt(index) === \"u\") {\n        part = str.slice(index + 1, index + 5);\n        if (/^[\\da-f]{4}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 5;\n          continue;\n        }\n      } else {\n        part = str.slice(index, index + 2);\n        if (/^[\\da-f]{2}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 2;\n          continue;\n        }\n      }\n    }\n    result += chr;\n  }\n  return result;\n}\nfunction warnOnceAboutExpiresCookie(name, expires) {\n  warnOnce(\n    !expires,\n    `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`\n  );\n}\n\n// lib/server-runtime/entry.ts\nfunction createEntryRouteModules(manifest) {\n  return Object.keys(manifest).reduce((memo2, routeId) => {\n    let route = manifest[routeId];\n    if (route) {\n      memo2[routeId] = route.module;\n    }\n    return memo2;\n  }, {});\n}\n\n// lib/server-runtime/mode.ts\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\n  ServerMode2[\"Development\"] = \"development\";\n  ServerMode2[\"Production\"] = \"production\";\n  ServerMode2[\"Test\"] = \"test\";\n  return ServerMode2;\n})(ServerMode || {});\nfunction isServerMode(value) {\n  return value === \"development\" /* Development */ || value === \"production\" /* Production */ || value === \"test\" /* Test */;\n}\n\n// lib/server-runtime/errors.ts\nfunction sanitizeError(error, serverMode) {\n  if (error instanceof Error && serverMode !== \"development\" /* Development */) {\n    let sanitized = new Error(\"Unexpected Server Error\");\n    sanitized.stack = void 0;\n    return sanitized;\n  }\n  return error;\n}\nfunction sanitizeErrors(errors, serverMode) {\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\n  }, {});\n}\nfunction serializeError(error, serverMode) {\n  let sanitized = sanitizeError(error, serverMode);\n  return {\n    message: sanitized.message,\n    stack: sanitized.stack\n  };\n}\nfunction serializeErrors2(errors, serverMode) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      let sanitized = sanitizeError(val, serverMode);\n      serialized[key] = {\n        message: sanitized.message,\n        stack: sanitized.stack,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.  This will only apply\n        // in dev mode since all production errors are sanitized to normal\n        // Error instances\n        ...sanitized.name !== \"Error\" ? {\n          __subType: sanitized.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/server-runtime/routeMatching.ts\nfunction matchServerRoutes(routes, pathname, basename) {\n  let matches = matchRoutes(\n    routes,\n    pathname,\n    basename\n  );\n  if (!matches) return null;\n  return matches.map((match) => ({\n    params: match.params,\n    pathname: match.pathname,\n    route: match.route\n  }));\n}\n\n// lib/server-runtime/data.ts\nasync function callRouteHandler(handler, args) {\n  let result = await handler({\n    request: stripRoutesParam(stripIndexParam2(args.request)),\n    params: args.params,\n    context: args.context\n  });\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\n    throw new Response(null, result.init);\n  }\n  return result;\n}\nfunction stripIndexParam2(request) {\n  let url = new URL(request.url);\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\nfunction stripRoutesParam(request) {\n  let url = new URL(request.url);\n  url.searchParams.delete(\"_routes\");\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\n\n// lib/server-runtime/invariant.ts\nfunction invariant3(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    console.error(\n      \"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\"\n    );\n    throw new Error(message);\n  }\n}\n\n// lib/server-runtime/dev.ts\nvar globalDevServerHooksKey = \"__reactRouterDevServerHooks\";\nfunction setDevServerHooks(devServerHooks) {\n  globalThis[globalDevServerHooksKey] = devServerHooks;\n}\nfunction getDevServerHooks() {\n  return globalThis[globalDevServerHooksKey];\n}\nfunction getBuildTimeHeader(request, headerName) {\n  if (typeof process !== \"undefined\") {\n    try {\n      if (process.env?.IS_RR_BUILD_REQUEST === \"yes\") {\n        return request.headers.get(headerName);\n      }\n    } catch (e) {\n    }\n  }\n  return null;\n}\n\n// lib/server-runtime/routes.ts\nfunction groupRoutesByParentId2(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction createRoutes(manifest, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => ({\n    ...route,\n    children: createRoutes(manifest, route.id, routesByParentId)\n  }));\n}\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let commonRoute = {\n      // Always include root due to default boundaries\n      hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\n      id: route.id,\n      path: route.path,\n      unstable_middleware: route.module.unstable_middleware,\n      // Need to use RR's version in the param typed here to permit the optional\n      // context even though we know it'll always be provided in remix\n      loader: route.module.loader ? async (args) => {\n        let preRenderedData = getBuildTimeHeader(\n          args.request,\n          \"X-React-Router-Prerender-Data\"\n        );\n        if (preRenderedData != null) {\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\n          invariant3(encoded, \"Missing prerendered data for route\");\n          let uint8array = new TextEncoder().encode(encoded);\n          let stream = new ReadableStream({\n            start(controller) {\n              controller.enqueue(uint8array);\n              controller.close();\n            }\n          });\n          let decoded = await decodeViaTurboStream(stream, global);\n          let data2 = decoded.value;\n          if (data2 && SingleFetchRedirectSymbol in data2) {\n            let result = data2[SingleFetchRedirectSymbol];\n            let init = { status: result.status };\n            if (result.reload) {\n              throw redirectDocument(result.redirect, init);\n            } else if (result.replace) {\n              throw replace(result.redirect, init);\n            } else {\n              throw redirect(result.redirect, init);\n            }\n          } else {\n            invariant3(\n              data2 && route.id in data2,\n              \"Unable to decode prerendered data\"\n            );\n            let result = data2[route.id];\n            invariant3(\n              \"data\" in result,\n              \"Unable to process prerendered data\"\n            );\n            return result.data;\n          }\n        }\n        let val = await callRouteHandler(route.module.loader, args);\n        return val;\n      } : void 0,\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\n      handle: route.module.handle\n    };\n    return route.index ? {\n      index: true,\n      ...commonRoute\n    } : {\n      caseSensitive: route.caseSensitive,\n      children: createStaticHandlerDataRoutes(\n        manifest,\n        future,\n        route.id,\n        routesByParentId\n      ),\n      ...commonRoute\n    };\n  });\n}\n\n// lib/server-runtime/markup.ts\nvar ESCAPE_LOOKUP3 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX3 = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml2(html) {\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\n}\n\n// lib/server-runtime/serverHandoff.ts\nfunction createServerHandoffString(serverHandoff) {\n  return escapeHtml2(JSON.stringify(serverHandoff));\n}\n\n// lib/server-runtime/headers.ts\nimport { splitCookiesString } from \"set-cookie-parser\";\nfunction getDocumentHeaders(build, context) {\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\n  let errorHeaders;\n  if (boundaryIdx >= 0) {\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\n    context.matches.slice(boundaryIdx).some((match) => {\n      let id = match.route.id;\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\n        errorHeaders = actionHeaders[id];\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\n        errorHeaders = loaderHeaders[id];\n      }\n      return errorHeaders != null;\n    });\n  }\n  return matches.reduce((parentHeaders, match, idx) => {\n    let { id } = match.route;\n    let route = build.routes[id];\n    invariant3(route, `Route with id \"${id}\" not found in build`);\n    let routeModule = route.module;\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\n    let actionHeaders = context.actionHeaders[id] || new Headers();\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\n    if (routeModule.headers == null) {\n      let headers2 = new Headers(parentHeaders);\n      if (includeErrorCookies) {\n        prependCookies(errorHeaders, headers2);\n      }\n      prependCookies(actionHeaders, headers2);\n      prependCookies(loaderHeaders, headers2);\n      return headers2;\n    }\n    let headers = new Headers(\n      routeModule.headers ? typeof routeModule.headers === \"function\" ? routeModule.headers({\n        loaderHeaders,\n        parentHeaders,\n        actionHeaders,\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\n      }) : routeModule.headers : void 0\n    );\n    if (includeErrorCookies) {\n      prependCookies(errorHeaders, headers);\n    }\n    prependCookies(actionHeaders, headers);\n    prependCookies(loaderHeaders, headers);\n    prependCookies(parentHeaders, headers);\n    return headers;\n  }, new Headers());\n}\nfunction prependCookies(parentHeaders, childHeaders) {\n  let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\n  if (parentSetCookieString) {\n    let cookies = splitCookiesString(parentSetCookieString);\n    let childCookies = new Set(childHeaders.getSetCookie());\n    cookies.forEach((cookie) => {\n      if (!childCookies.has(cookie)) {\n        childHeaders.append(\"Set-Cookie\", cookie);\n      }\n    });\n  }\n}\n\n// lib/server-runtime/single-fetch.ts\nvar SERVER_NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([\n  ...NO_BODY_STATUS_CODES,\n  304\n]);\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let respond2 = function(context) {\n      let headers = getDocumentHeaders(build, context);\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n        return generateSingleFetchResponse(request, build, serverMode, {\n          result: getSingleFetchRedirect(\n            context.statusCode,\n            headers,\n            build.basename\n          ),\n          headers,\n          status: SINGLE_FETCH_REDIRECT_STATUS\n        });\n      }\n      if (context.errors) {\n        Object.values(context.errors).forEach((err) => {\n          if (!isRouteErrorResponse(err) || err.error) {\n            handleError(err);\n          }\n        });\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let singleFetchResult;\n      if (context.errors) {\n        singleFetchResult = { error: Object.values(context.errors)[0] };\n      } else {\n        singleFetchResult = {\n          data: Object.values(context.actionData || {})[0]\n        };\n      }\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: singleFetchResult,\n        headers,\n        status: context.statusCode\n      });\n    };\n    var respond = respond2;\n    let handlerRequest = new Request(handlerUrl, {\n      method: request.method,\n      body: request.body,\n      headers: request.headers,\n      signal: request.signal,\n      ...request.body ? { duplex: \"half\" } : void 0\n    });\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      skipRevalidation: true,\n      unstable_respond: respond2\n    });\n    if (!isResponse(result)) {\n      result = respond2(result);\n    }\n    if (isRedirectResponse(result)) {\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: getSingleFetchRedirect(\n          result.status,\n          result.headers,\n          build.basename\n        ),\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      });\n    }\n    return result;\n  } catch (error) {\n    handleError(error);\n    return generateSingleFetchResponse(request, build, serverMode, {\n      result: { error },\n      headers: new Headers(),\n      status: 500\n    });\n  }\n}\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let respond2 = function(context) {\n      let headers = getDocumentHeaders(build, context);\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n        return generateSingleFetchResponse(request, build, serverMode, {\n          result: {\n            [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\n              context.statusCode,\n              headers,\n              build.basename\n            )\n          },\n          headers,\n          status: SINGLE_FETCH_REDIRECT_STATUS\n        });\n      }\n      if (context.errors) {\n        Object.values(context.errors).forEach((err) => {\n          if (!isRouteErrorResponse(err) || err.error) {\n            handleError(err);\n          }\n        });\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let results = {};\n      let loadedMatches = new Set(\n        context.matches.filter(\n          (m) => loadRouteIds ? loadRouteIds.has(m.route.id) : m.route.loader != null\n        ).map((m) => m.route.id)\n      );\n      if (context.errors) {\n        for (let [id, error] of Object.entries(context.errors)) {\n          results[id] = { error };\n        }\n      }\n      for (let [id, data2] of Object.entries(context.loaderData)) {\n        if (!(id in results) && loadedMatches.has(id)) {\n          results[id] = { data: data2 };\n        }\n      }\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: results,\n        headers,\n        status: context.statusCode\n      });\n    };\n    var respond = respond2;\n    let handlerRequest = new Request(handlerUrl, {\n      headers: request.headers,\n      signal: request.signal\n    });\n    let routesParam = new URL(request.url).searchParams.get(\"_routes\");\n    let loadRouteIds = routesParam ? new Set(routesParam.split(\",\")) : null;\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      filterMatchesToLoad: (m) => !loadRouteIds || loadRouteIds.has(m.route.id),\n      skipLoaderErrorBubbling: true,\n      unstable_respond: respond2\n    });\n    if (!isResponse(result)) {\n      result = respond2(result);\n    }\n    if (isRedirectResponse(result)) {\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\n            result.status,\n            result.headers,\n            build.basename\n          )\n        },\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      });\n    }\n    return result;\n  } catch (error) {\n    handleError(error);\n    return generateSingleFetchResponse(request, build, serverMode, {\n      result: { root: { error } },\n      headers: new Headers(),\n      status: 500\n    });\n  }\n}\nfunction generateSingleFetchResponse(request, build, serverMode, {\n  result,\n  headers,\n  status\n}) {\n  let resultHeaders = new Headers(headers);\n  resultHeaders.set(\"X-Remix-Response\", \"yes\");\n  if (SERVER_NO_BODY_STATUS_CODES.has(status)) {\n    return new Response(null, { status, headers: resultHeaders });\n  }\n  resultHeaders.set(\"Content-Type\", \"text/x-script\");\n  return new Response(\n    encodeViaTurboStream(\n      result,\n      request.signal,\n      build.entry.module.streamTimeout,\n      serverMode\n    ),\n    {\n      status: status || 200,\n      headers: resultHeaders\n    }\n  );\n}\nfunction getSingleFetchRedirect(status, headers, basename) {\n  let redirect2 = headers.get(\"Location\");\n  if (basename) {\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\n  }\n  return {\n    redirect: redirect2,\n    status,\n    revalidate: (\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\n      // detail of ?_data requests as our way to tell the front end to revalidate when\n      // we didn't have a response body to include that information in.\n      // With single fetch, we tell the front end via this revalidate boolean field.\n      // However, we're respecting it for now because it may be something folks have\n      // used in their own responses\n      // TODO(v3): Consider removing or making this official public API\n      headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\")\n    ),\n    reload: headers.has(\"X-Remix-Reload-Document\"),\n    replace: headers.has(\"X-Remix-Replace\")\n  };\n}\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\n  let controller = new AbortController();\n  let timeoutId = setTimeout(\n    () => controller.abort(new Error(\"Server Timeout\")),\n    typeof streamTimeout === \"number\" ? streamTimeout : 4950\n  );\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\n  return encode(data2, {\n    signal: controller.signal,\n    plugins: [\n      (value) => {\n        if (value instanceof Error) {\n          let { name, message, stack } = serverMode === \"production\" /* Production */ ? sanitizeError(value, serverMode) : value;\n          return [\"SanitizedError\", name, message, stack];\n        }\n        if (value instanceof ErrorResponseImpl) {\n          let { data: data3, status, statusText } = value;\n          return [\"ErrorResponse\", data3, status, statusText];\n        }\n        if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\n          return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\n        }\n      }\n    ],\n    postPlugins: [\n      (value) => {\n        if (!value) return;\n        if (typeof value !== \"object\") return;\n        return [\n          \"SingleFetchClassInstance\",\n          Object.fromEntries(Object.entries(value))\n        ];\n      },\n      () => [\"SingleFetchFallback\"]\n    ]\n  });\n}\n\n// lib/server-runtime/server.ts\nfunction derive(build, mode) {\n  let routes = createRoutes(build.routes);\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\n  let serverMode = isServerMode(mode) ? mode : \"production\" /* Production */;\n  let staticHandler = createStaticHandler(dataRoutes, {\n    basename: build.basename\n  });\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\n    if (serverMode !== \"test\" /* Test */ && !request.signal.aborted) {\n      console.error(\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        isRouteErrorResponse(error) && error.error ? error.error : error\n      );\n    }\n  });\n  return {\n    routes,\n    dataRoutes,\n    serverMode,\n    staticHandler,\n    errorHandler\n  };\n}\nvar createRequestHandler = (build, mode) => {\n  let _build;\n  let routes;\n  let serverMode;\n  let staticHandler;\n  let errorHandler;\n  return async function requestHandler(request, initialContext) {\n    _build = typeof build === \"function\" ? await build() : build;\n    if (typeof build === \"function\") {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    }\n    let params = {};\n    let loadContext;\n    let handleError = (error) => {\n      if (mode === \"development\" /* Development */) {\n        getDevServerHooks()?.processRequestError?.(error);\n      }\n      errorHandler(error, {\n        context: loadContext,\n        params,\n        request\n      });\n    };\n    if (_build.future.unstable_middleware) {\n      if (initialContext == null) {\n        loadContext = new unstable_RouterContextProvider();\n      } else {\n        try {\n          loadContext = new unstable_RouterContextProvider(\n            initialContext\n          );\n        } catch (e) {\n          let error = new Error(\n            `Unable to create initial \\`unstable_RouterContextProvider\\` instance. Please confirm you are returning an instance of \\`Map<unstable_routerContext, unknown>\\` from your \\`getLoadContext\\` function.\n\nError: ${e instanceof Error ? e.toString() : e}`\n          );\n          handleError(error);\n          return returnLastResortErrorResponse(error, serverMode);\n        }\n      }\n    } else {\n      loadContext = initialContext || {};\n    }\n    let url = new URL(request.url);\n    let normalizedBasename = _build.basename || \"/\";\n    let normalizedPath = url.pathname;\n    if (stripBasename(normalizedPath, normalizedBasename) === \"/_root.data\") {\n      normalizedPath = normalizedBasename;\n    } else if (normalizedPath.endsWith(\".data\")) {\n      normalizedPath = normalizedPath.replace(/\\.data$/, \"\");\n    }\n    if (stripBasename(normalizedPath, normalizedBasename) !== \"/\" && normalizedPath.endsWith(\"/\")) {\n      normalizedPath = normalizedPath.slice(0, -1);\n    }\n    let isSpaMode = getBuildTimeHeader(request, \"X-React-Router-SPA-Mode\") === \"yes\";\n    if (!_build.ssr) {\n      if (_build.prerender.length === 0) {\n        isSpaMode = true;\n      } else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + \"/\")) {\n        if (url.pathname.endsWith(\".data\")) {\n          errorHandler(\n            new ErrorResponseImpl(\n              404,\n              \"Not Found\",\n              `Refusing to SSR the path \\`${normalizedPath}\\` because \\`ssr:false\\` is set and the path is not included in the \\`prerender\\` config, so in production the path will be a 404.`\n            ),\n            {\n              context: loadContext,\n              params,\n              request\n            }\n          );\n          return new Response(\"Not Found\", {\n            status: 404,\n            statusText: \"Not Found\"\n          });\n        } else {\n          isSpaMode = true;\n        }\n      }\n    }\n    let manifestUrl = getManifestPath(\n      _build.routeDiscovery.manifestPath,\n      normalizedBasename\n    );\n    if (url.pathname === manifestUrl) {\n      try {\n        let res = await handleManifestRequest(_build, routes, url);\n        return res;\n      } catch (e) {\n        handleError(e);\n        return new Response(\"Unknown Server Error\", { status: 500 });\n      }\n    }\n    let matches = matchServerRoutes(routes, normalizedPath, _build.basename);\n    if (matches && matches.length > 0) {\n      Object.assign(params, matches[0].params);\n    }\n    let response;\n    if (url.pathname.endsWith(\".data\")) {\n      let handlerUrl = new URL(request.url);\n      handlerUrl.pathname = normalizedPath;\n      let singleFetchMatches = matchServerRoutes(\n        routes,\n        handlerUrl.pathname,\n        _build.basename\n      );\n      response = await handleSingleFetchRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        request,\n        handlerUrl,\n        loadContext,\n        handleError\n      );\n      if (_build.entry.module.handleDataRequest) {\n        response = await _build.entry.module.handleDataRequest(response, {\n          context: loadContext,\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\n          request\n        });\n        if (isRedirectResponse(response)) {\n          let result = getSingleFetchRedirect(\n            response.status,\n            response.headers,\n            _build.basename\n          );\n          if (request.method === \"GET\") {\n            result = {\n              [SingleFetchRedirectSymbol]: result\n            };\n          }\n          let headers = new Headers(response.headers);\n          headers.set(\"Content-Type\", \"text/x-script\");\n          return new Response(\n            encodeViaTurboStream(\n              result,\n              request.signal,\n              _build.entry.module.streamTimeout,\n              serverMode\n            ),\n            {\n              status: SINGLE_FETCH_REDIRECT_STATUS,\n              headers\n            }\n          );\n        }\n      }\n    } else if (!isSpaMode && matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\n      response = await handleResourceRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        matches.slice(-1)[0].route.id,\n        request,\n        loadContext,\n        handleError\n      );\n    } else {\n      let { pathname } = url;\n      let criticalCss = void 0;\n      if (_build.unstable_getCriticalCss) {\n        criticalCss = await _build.unstable_getCriticalCss({ pathname });\n      } else if (mode === \"development\" /* Development */ && getDevServerHooks()?.getCriticalCss) {\n        criticalCss = await getDevServerHooks()?.getCriticalCss?.(pathname);\n      }\n      response = await handleDocumentRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        request,\n        loadContext,\n        handleError,\n        isSpaMode,\n        criticalCss\n      );\n    }\n    if (request.method === \"HEAD\") {\n      return new Response(null, {\n        headers: response.headers,\n        status: response.status,\n        statusText: response.statusText\n      });\n    }\n    return response;\n  };\n};\nasync function handleManifestRequest(build, routes, url) {\n  if (build.assets.version !== url.searchParams.get(\"version\")) {\n    return new Response(null, {\n      status: 204,\n      headers: {\n        \"X-Remix-Reload-Document\": \"true\"\n      }\n    });\n  }\n  let patches = {};\n  if (url.searchParams.has(\"p\")) {\n    let paths = /* @__PURE__ */ new Set();\n    url.searchParams.getAll(\"p\").forEach((path) => {\n      if (!path.startsWith(\"/\")) {\n        path = `/${path}`;\n      }\n      let segments = path.split(\"/\").slice(1);\n      segments.forEach((_, i) => {\n        let partialPath = segments.slice(0, i + 1).join(\"/\");\n        paths.add(`/${partialPath}`);\n      });\n    });\n    for (let path of paths) {\n      let matches = matchServerRoutes(routes, path, build.basename);\n      if (matches) {\n        for (let match of matches) {\n          let routeId = match.route.id;\n          let route = build.assets.routes[routeId];\n          if (route) {\n            patches[routeId] = route;\n          }\n        }\n      }\n    }\n    return Response.json(patches, {\n      headers: {\n        \"Cache-Control\": \"public, max-age=31536000, immutable\"\n      }\n    });\n  }\n  return new Response(\"Invalid Request\", { status: 400 });\n}\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\n  let response = request.method !== \"GET\" ? await singleFetchAction(\n    build,\n    serverMode,\n    staticHandler,\n    request,\n    handlerUrl,\n    loadContext,\n    handleError\n  ) : await singleFetchLoaders(\n    build,\n    serverMode,\n    staticHandler,\n    request,\n    handlerUrl,\n    loadContext,\n    handleError\n  );\n  return response;\n}\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, isSpaMode, criticalCss) {\n  try {\n    let response = await staticHandler.query(request, {\n      requestContext: loadContext,\n      unstable_respond: build.future.unstable_middleware ? (ctx) => renderHtml(ctx, isSpaMode) : void 0\n    });\n    return isResponse(response) ? response : renderHtml(response, isSpaMode);\n  } catch (error) {\n    handleError(error);\n    return new Response(null, { status: 500 });\n  }\n  async function renderHtml(context, isSpaMode2) {\n    if (isResponse(context)) {\n      return context;\n    }\n    let headers = getDocumentHeaders(build, context);\n    if (SERVER_NO_BODY_STATUS_CODES.has(context.statusCode)) {\n      return new Response(null, { status: context.statusCode, headers });\n    }\n    if (context.errors) {\n      Object.values(context.errors).forEach((err) => {\n        if (!isRouteErrorResponse(err) || err.error) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    let state = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors2(context.errors, serverMode)\n    };\n    let baseServerHandoff = {\n      basename: build.basename,\n      future: build.future,\n      routeDiscovery: build.routeDiscovery,\n      ssr: build.ssr,\n      isSpaMode: isSpaMode2\n    };\n    let entryContext = {\n      manifest: build.assets,\n      routeModules: createEntryRouteModules(build.routes),\n      staticHandlerContext: context,\n      criticalCss,\n      serverHandoffString: createServerHandoffString({\n        ...baseServerHandoff,\n        criticalCss\n      }),\n      serverHandoffStream: encodeViaTurboStream(\n        state,\n        request.signal,\n        build.entry.module.streamTimeout,\n        serverMode\n      ),\n      renderMeta: {},\n      future: build.future,\n      ssr: build.ssr,\n      routeDiscovery: build.routeDiscovery,\n      isSpaMode: isSpaMode2,\n      serializeError: (err) => serializeError(err, serverMode)\n    };\n    let handleDocumentRequestFunction = build.entry.module.default;\n    try {\n      return await handleDocumentRequestFunction(\n        request,\n        context.statusCode,\n        headers,\n        entryContext,\n        loadContext\n      );\n    } catch (error) {\n      handleError(error);\n      let errorForSecondRender = error;\n      if (isResponse(error)) {\n        try {\n          let data2 = await unwrapResponse(error);\n          errorForSecondRender = new ErrorResponseImpl(\n            error.status,\n            error.statusText,\n            data2\n          );\n        } catch (e) {\n        }\n      }\n      context = getStaticContextFromError(\n        staticHandler.dataRoutes,\n        context,\n        errorForSecondRender\n      );\n      if (context.errors) {\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let state2 = {\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: serializeErrors2(context.errors, serverMode)\n      };\n      entryContext = {\n        ...entryContext,\n        staticHandlerContext: context,\n        serverHandoffString: createServerHandoffString(baseServerHandoff),\n        serverHandoffStream: encodeViaTurboStream(\n          state2,\n          request.signal,\n          build.entry.module.streamTimeout,\n          serverMode\n        ),\n        renderMeta: {}\n      };\n      try {\n        return await handleDocumentRequestFunction(\n          request,\n          context.statusCode,\n          headers,\n          entryContext,\n          loadContext\n        );\n      } catch (error2) {\n        handleError(error2);\n        return returnLastResortErrorResponse(error2, serverMode);\n      }\n    }\n  }\n}\nasync function handleResourceRequest(serverMode, build, staticHandler, routeId, request, loadContext, handleError) {\n  try {\n    let response = await staticHandler.queryRoute(request, {\n      routeId,\n      requestContext: loadContext,\n      unstable_respond: build.future.unstable_middleware ? (ctx) => ctx : void 0\n    });\n    if (isResponse(response)) {\n      return response;\n    }\n    if (typeof response === \"string\") {\n      return new Response(response);\n    }\n    return Response.json(response);\n  } catch (error) {\n    if (isResponse(error)) {\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\n      return error;\n    }\n    if (isRouteErrorResponse(error)) {\n      if (error) {\n        handleError(error);\n      }\n      return errorResponseToJson(error, serverMode);\n    }\n    if (error instanceof Error && error.message === \"Expected a response from queryRoute\") {\n      let newError = new Error(\n        \"Expected a Response to be returned from resource route handler\"\n      );\n      handleError(newError);\n      return returnLastResortErrorResponse(newError, serverMode);\n    }\n    handleError(error);\n    return returnLastResortErrorResponse(error, serverMode);\n  }\n}\nfunction errorResponseToJson(errorResponse, serverMode) {\n  return Response.json(\n    serializeError(\n      // @ts-expect-error This is \"private\" from users but intended for internal use\n      errorResponse.error || new Error(\"Unexpected Server Error\"),\n      serverMode\n    ),\n    {\n      status: errorResponse.status,\n      statusText: errorResponse.statusText,\n      headers: {\n        \"X-Remix-Error\": \"yes\"\n      }\n    }\n  );\n}\nfunction returnLastResortErrorResponse(error, serverMode) {\n  let message = \"Unexpected Server Error\";\n  if (serverMode !== \"production\" /* Production */) {\n    message += `\n\n${String(error)}`;\n  }\n  return new Response(message, {\n    status: 500,\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  });\n}\nfunction unwrapResponse(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  return contentType && /\\bapplication\\/json\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\n}\n\n// lib/server-runtime/sessions.ts\nfunction flash(name) {\n  return `__flash_${name}__`;\n}\nvar createSession = (initialData = {}, id = \"\") => {\n  let map = new Map(Object.entries(initialData));\n  return {\n    get id() {\n      return id;\n    },\n    get data() {\n      return Object.fromEntries(map);\n    },\n    has(name) {\n      return map.has(name) || map.has(flash(name));\n    },\n    get(name) {\n      if (map.has(name)) return map.get(name);\n      let flashName = flash(name);\n      if (map.has(flashName)) {\n        let value = map.get(flashName);\n        map.delete(flashName);\n        return value;\n      }\n      return void 0;\n    },\n    set(name, value) {\n      map.set(name, value);\n    },\n    flash(name, value) {\n      map.set(flash(name), value);\n    },\n    unset(name) {\n      map.delete(name);\n    }\n  };\n};\nvar isSession = (object) => {\n  return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\n};\nfunction createSessionStorage({\n  cookie: cookieArg,\n  createData,\n  readData,\n  updateData,\n  deleteData\n}) {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\n      let data2 = id && await readData(id);\n      return createSession(data2 || {}, id || \"\");\n    },\n    async commitSession(session, options) {\n      let { id, data: data2 } = session;\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\n      if (id) {\n        await updateData(id, data2, expires);\n      } else {\n        id = await createData(data2, expires);\n      }\n      return cookie.serialize(id, options);\n    },\n    async destroySession(session, options) {\n      await deleteData(session.id);\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n}\nfunction warnOnceAboutSigningSessionCookie(cookie) {\n  warnOnce(\n    cookie.isSigned,\n    `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://reactrouter.com/explanation/sessions-and-cookies#signing-cookies for more information.`\n  );\n}\n\n// lib/server-runtime/sessions/cookieStorage.ts\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      return createSession(\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\n      );\n    },\n    async commitSession(session, options) {\n      let serializedCookie = await cookie.serialize(session.data, options);\n      if (serializedCookie.length > 4096) {\n        throw new Error(\n          \"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length\n        );\n      }\n      return serializedCookie;\n    },\n    async destroySession(_session, options) {\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n}\n\n// lib/server-runtime/sessions/memoryStorage.ts\nfunction createMemorySessionStorage({ cookie } = {}) {\n  let map = /* @__PURE__ */ new Map();\n  return createSessionStorage({\n    cookie,\n    async createData(data2, expires) {\n      let id = Math.random().toString(36).substring(2, 10);\n      map.set(id, { data: data2, expires });\n      return id;\n    },\n    async readData(id) {\n      if (map.has(id)) {\n        let { data: data2, expires } = map.get(id);\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\n          return data2;\n        }\n        if (expires) map.delete(id);\n      }\n      return null;\n    },\n    async updateData(id, data2, expires) {\n      map.set(id, { data: data2, expires });\n    },\n    async deleteData(id) {\n      map.delete(id);\n    }\n  });\n}\n\n// lib/href.ts\nfunction href(path, ...args) {\n  let params = args[0];\n  return path.split(\"/\").map((segment) => {\n    const match = segment.match(/^:([\\w-]+)(\\?)?/);\n    if (!match) return segment;\n    const param = match[1];\n    const value = params ? params[param] : void 0;\n    const isRequired = match[2] === void 0;\n    if (isRequired && value === void 0) {\n      throw Error(\n        `Path '${path}' requires param '${param}' but it was not provided`\n      );\n    }\n    return value;\n  }).filter((segment) => segment !== void 0).join(\"/\");\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors2(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/dom/ssr/hydration.tsx\nfunction getHydrationData(state, routes, getRouteInfo, location, basename, isSpaMode) {\n  let hydrationData = {\n    ...state,\n    loaderData: { ...state.loaderData }\n  };\n  let initialMatches = matchRoutes(routes, location, basename);\n  if (initialMatches) {\n    for (let match of initialMatches) {\n      let routeId = match.route.id;\n      let routeInfo = getRouteInfo(routeId);\n      if (shouldHydrateRouteLoader(\n        routeId,\n        routeInfo.clientLoader,\n        routeInfo.hasLoader,\n        isSpaMode\n      ) && (routeInfo.hasHydrateFallback || !routeInfo.hasLoader)) {\n        delete hydrationData.loaderData[routeId];\n      } else if (!routeInfo.hasLoader) {\n        hydrationData.loaderData[routeId] = null;\n      }\n    }\n  }\n  return hydrationData;\n}\n\nexport {\n  Action,\n  createBrowserHistory,\n  invariant,\n  createPath,\n  parsePath,\n  unstable_createContext,\n  unstable_RouterContextProvider,\n  matchRoutes,\n  generatePath,\n  matchPath,\n  resolvePath,\n  data,\n  redirect,\n  redirectDocument,\n  replace,\n  ErrorResponseImpl,\n  isRouteErrorResponse,\n  IDLE_NAVIGATION,\n  IDLE_FETCHER,\n  IDLE_BLOCKER,\n  createRouter,\n  DataRouterContext,\n  DataRouterStateContext,\n  ViewTransitionContext,\n  FetchersContext,\n  NavigationContext,\n  LocationContext,\n  RouteContext,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useNavigationType,\n  useMatch,\n  useNavigate,\n  useOutletContext,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useNavigation,\n  useRevalidator,\n  useMatches,\n  useLoaderData,\n  useRouteLoaderData,\n  useActionData,\n  useRouteError,\n  useAsyncValue,\n  useAsyncError,\n  useBlocker,\n  mapRouteProperties,\n  hydrationRouteProperties,\n  createMemoryRouter,\n  RouterProvider,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  Await,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  renderMatches,\n  createSearchParams,\n  SingleFetchRedirectSymbol,\n  getTurboStreamSingleFetchDataStrategy,\n  decodeViaTurboStream,\n  RemixErrorBoundary,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createClientRoutes,\n  shouldHydrateRouteLoader,\n  getPatchRoutesOnNavigationFunction,\n  useFogOFWarDiscovery,\n  FrameworkContext,\n  Links,\n  PrefetchPageLinks,\n  Meta,\n  Scripts,\n  createBrowserRouter,\n  createHashRouter,\n  BrowserRouter,\n  HashRouter,\n  HistoryRouter,\n  Link,\n  NavLink,\n  Form,\n  ScrollRestoration,\n  useLinkClickHandler,\n  useSearchParams,\n  useSubmit,\n  useFormAction,\n  useFetcher,\n  useFetchers,\n  useScrollRestoration,\n  useBeforeUnload,\n  usePrompt,\n  useViewTransitionState,\n  StaticRouter,\n  StaticRouterProvider,\n  createStaticHandler2 as createStaticHandler,\n  createStaticRouter,\n  ServerRouter,\n  createRoutesStub,\n  createCookie,\n  isCookie,\n  ServerMode,\n  setDevServerHooks,\n  createRequestHandler,\n  createSession,\n  isSession,\n  createSessionStorage,\n  createCookieSessionStorage,\n  createMemorySessionStorage,\n  href,\n  deserializeErrors2 as deserializeErrors,\n  getHydrationData\n};\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.9.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"MainPage_mainContainer__9RIzR\",\"header\":\"MainPage_header__X5b6a\",\"logo\":\"MainPage_logo__v-CVi\",\"userActions\":\"MainPage_userActions__20qBx\",\"avatar\":\"MainPage_avatar__WcrnO\",\"btn\":\"MainPage_btn__9YvF9\",\"chatContainer\":\"MainPage_chatContainer__HkBSg\",\"queryPanel\":\"MainPage_queryPanel__iQa2+\",\"responsePanel\":\"MainPage_responsePanel__z6tmL\",\"panelHeader\":\"MainPage_panelHeader__aiLUJ\",\"queryTextarea\":\"MainPage_queryTextarea__zsj1g\",\"responseContent\":\"MainPage_responseContent__KA96B\",\"textMuted\":\"MainPage_textMuted__bUS1E\",\"historySection\":\"MainPage_historySection__JEs46\",\"historyList\":\"MainPage_historyList__UKHDD\",\"historyItem\":\"MainPage_historyItem__AHNgm\",\"historyDate\":\"MainPage_historyDate__wIZ-J\"};","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../styles/MainPage.module.css';\n\nconst MainPage = () => {\n  const [user, setUser] = useState(null);\n  const [query, setQuery] = useState('');\n  const [response, setResponse] = useState('');\n  const [history, setHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        // Fetch user data\n        const userRes = await axios.get('/api/user', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setUser(userRes.data);\n\n        // Fetch history data\n        const historyRes = await axios.get('/api/history', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        // Process history data\n        const processedHistory = historyRes.data.queries\n          .map((item) => ({\n            query: item.query_text,\n            response: item.response_text,\n            created_at: item.created_at,\n          }))\n          .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n\n        setHistory(processedHistory);\n      } catch (err) {\n        console.error('Data fetch error:', err);\n        if (err.response?.status === 401) {\n          localStorage.removeItem('token');\n          navigate('/login');\n        }\n      }\n    };\n\n    fetchData();\n  }, [navigate]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!query.trim()) return;\n\n    setIsLoading(true);\n    setError('');\n    setResponse('');\n\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Making API request to /api/query with query:', query);\n      const res = await axios.post(\n        '/api/query',\n        { query },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n          validateStatus: (status) => status >= 200 && status < 600, // Handle all status codes\n          timeout: 30000, // 30-second timeout\n        }\n      );\n\n      console.log('API Response (Full):', res);\n      console.log('API Response Data:', res.data);\n\n      // Handle response based on status code\n      if (res.status >= 200 && res.status < 300) {\n        // Try different possible response fields\n        let apiResponse = res.data.answer || res.data.response || res.data.result || res.data.message;\n\n        // If the response is an object, try to extract a string\n        if (apiResponse && typeof apiResponse === 'object') {\n          apiResponse = apiResponse.text || apiResponse.message || JSON.stringify(apiResponse);\n          console.log('Extracted string from object - apiResponse:', apiResponse);\n        }\n\n        // Validate the response\n        if (!apiResponse || typeof apiResponse !== 'string') {\n          console.error('Validation failed:', {\n            apiResponse,\n            type: typeof apiResponse,\n            isString: typeof apiResponse === 'string',\n          });\n          throw new Error('Invalid response format from API');\n        }\n\n        // Update the response state\n        setResponse(apiResponse);\n\n        // Update history\n        const newHistoryItem = {\n          query,\n          response: apiResponse,\n          created_at: new Date().toISOString(),\n        };\n\n        setHistory((prev) => [newHistoryItem, ...prev]);\n        setQuery('');\n      } else {\n        // Handle non-2xx status codes\n        const errorMessage =\n          res.data.response || res.data.error || res.data.message || `Server error (Status: ${res.status})`;\n        setError(errorMessage);\n      }\n    } catch (err) {\n      console.error('Query error:', err.message, err.code, err.config);\n      if (err.code === 'ECONNABORTED') {\n        setError('Request timed out. The server is taking too long to respond. Please try again later.');\n      } else if (err.code === 'ERR_NETWORK') {\n        setError('Network error. Please check your connection and try again.');\n      } else if (err.response) {\n        setError(\n          err.response.data?.message || err.response.data?.error || `Server error (Status: ${err.response.status})`\n        );\n      } else {\n        setError(err.message || 'Failed to process query');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  const UserProfile = () => {\n    navigate('/profile');\n  };\n\n  if (!user) {\n    return <div className={styles.loading}>Loading user data...</div>;\n  }\n\n  return (\n    <div className={styles.mainContainer}>\n      <header className={styles.header}>\n        <div className={styles.logo}>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n            <path d=\"M12 2L2 7L12 12L22 7L12 2Z\" fill=\"#fff\" />\n            <path d=\"M2 17L12 22L22 17\" stroke=\"#fff\" strokeWidth=\"2\" />\n            <path d=\"M2 12L12 17L22 12\" stroke=\"#fff\" strokeWidth=\"2\" />\n          </svg>\n          ThaparGPT\n        </div>\n        <div className={styles.userActions}>\n          <div className={styles.avatar} onClick={UserProfile} title={user.full_name}>\n            {user.full_name?.charAt(0)?.toUpperCase() || 'U'}\n          </div>\n          <button className={styles.btn} onClick={handleLogout}>\n            Logout\n          </button>\n        </div>\n      </header>\n\n      <div className={styles.chatContainer}>\n        <div className={styles.queryPanel}>\n          <h3 className={styles.panelHeader}>Ask ThaparGPT</h3>\n          <form onSubmit={handleSubmit}>\n            <textarea\n              className={styles.queryTextarea}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Type your question here...\"\n              required\n              disabled={isLoading}\n            />\n            <button type=\"submit\" className={styles.btn} disabled={isLoading || !query.trim()}>\n              {isLoading ? (\n                <>\n                  <span className={styles.spinner}></span>\n                  Processing...\n                </>\n              ) : (\n                'Get Answer'\n              )}\n            </button>\n          </form>\n          {error && <div className={styles.errorMessage}>{error}</div>}\n        </div>\n\n        <div className={styles.responsePanel}>\n          <h3 className={styles.panelHeader}>Response</h3>\n          <div className={styles.responseContent}>\n            {response ? (\n              <div className={styles.responseText}>\n                {response.split('\\n').map((line, i) => (\n                  <p key={i}>{line}</p>\n                ))}\n              </div>\n            ) : (\n              <p className={styles.textMuted}>\n                {isLoading ? 'Generating response...' : 'Your response will appear here...'}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.historySection}>\n        <h3 className={styles.panelHeader}>Recent Queries</h3>\n        {history.length > 0 ? (\n          <ul className={styles.historyList}>\n            {history.map((item, index) => (\n              <li key={`${item.created_at}-${index}`} className={styles.historyItem}>\n                <div className={styles.historyQuery}>\n                  <strong>Q:</strong> {item.query}\n                </div>\n                <div className={styles.historyResponse}>\n                  <strong>A:</strong>\n                  {item.response ? (\n                    <div className={styles.responseText}>\n                      {item.response.split('\\n').map((line, i) => (\n                        <p key={i}>{line}</p>\n                      ))}\n                    </div>\n                  ) : (\n                    <span className={styles.textMuted}>No response available</span>\n                  )}\n                </div>\n                <div className={styles.historyDate}>\n                  {new Date(item.created_at).toLocaleString()}\n                </div>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className={styles.textMuted}>No query history yet</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setError('');\n        \n        try {\n            const res = await axios.post('/api/login', { email, password });\n            localStorage.setItem('token', res.data.token);\n            navigate('/');\n        } catch (err) {\n            setError(err.response?.data?.error || 'Login failed. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <h2>Welcome Back</h2>\n            <p className=\"text-center mt-3\">Sign in to your ThaparGPT account</p>\n            \n            {error && (\n                <div className=\"error-message\">\n                    {error}\n                </div>\n            )}\n            \n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Email Address</label>\n                    <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                \n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                \n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-block mt-3\"\n                    disabled={isLoading}\n                >\n                    {isLoading ? 'Signing in...' : 'Sign In'}\n                </button>\n            </form>\n            \n            <div className=\"text-center mt-3\">\n                <span>Don't have an account? </span>\n                <Link to=\"/signup\" className=\"link-text\">Sign up</Link>\n            </div>\n            \n            <div className=\"text-center mt-3\">\n                <Link to=\"/forgot-password\" className=\"link-text\">Forgot password?</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Signup = () => {\n    const [formData, setFormData] = useState({\n        username: '',\n        email: '',\n        password: '',\n        fullName: '',\n        thaparId: ''\n    });\n    const [errors, setErrors] = useState({\n        username: '',\n        email: '',\n        password: '',\n        form: ''\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: value\n        }));\n        // Clear error when user types\n        if (errors[name]) {\n            setErrors(prev => ({\n                ...prev,\n                [name]: ''\n            }));\n        }\n    };\n\n    const validateForm = () => {\n        let valid = true;\n        const newErrors = {\n            username: '',\n            email: '',\n            password: '',\n            form: ''\n        };\n\n        // Username validation\n        if (!formData.username.trim()) {\n            newErrors.username = 'Username is required';\n            valid = false;\n        } else if (formData.username.length < 3) {\n            newErrors.username = 'Username must be at least 3 characters';\n            valid = false;\n        }\n\n        // Email validation\n        if (!formData.email.trim()) {\n            newErrors.email = 'Email is required';\n            valid = false;\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n            newErrors.email = 'Please enter a valid email address';\n            valid = false;\n        }\n\n        // Password validation\n        if (!formData.password) {\n            newErrors.password = 'Password is required';\n            valid = false;\n        } else if (formData.password.length < 6) {\n            newErrors.password = 'Password must be at least 6 characters';\n            valid = false;\n        }\n\n        setErrors(newErrors);\n        return valid;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setErrors({ ...errors, form: '' });\n\n        if (!validateForm()) {\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            const res = await axios.post('/api/signup', {\n                username: formData.username,\n                email: formData.email,\n                password: formData.password,\n                full_name: formData.fullName,\n                thapar_id: formData.thaparId\n            });\n\n            if (res.data.success) {\n                localStorage.setItem('token', res.data.token);\n                navigate('/');\n            } else {\n                setErrors({\n                    ...errors,\n                    form: res.data.message || 'Signup failed. Please try again.',\n                    ...(res.data.details || {})\n                });\n            }\n        } catch (err) {\n            let errorMessage = 'Signup failed. Please try again.';\n            \n            if (err.response) {\n                // Server responded with error status\n                const { data } = err.response;\n                errorMessage = data.message || errorMessage;\n                \n                setErrors({\n                    ...errors,\n                    form: errorMessage,\n                    ...(data.details || {})\n                });\n            } else if (err.request) {\n                // Request was made but no response\n                errorMessage = 'Network error. Please check your connection.';\n                setErrors({ ...errors, form: errorMessage });\n            } else {\n                // Other errors\n                console.error('Signup error:', err);\n                setErrors({ ...errors, form: errorMessage });\n            }\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <h2>Create Account</h2>\n            <p className=\"text-center mt-3\">Join ThaparGPT today</p>\n            \n            {errors.form && (\n                <div className=\"error-message\">\n                    {errors.form}\n                    {Object.keys(errors).some(key => key !== 'form' && errors[key]) && (\n                        <ul className=\"error-details\">\n                            {Object.entries(errors).map(([field, message]) => (\n                                field !== 'form' && message && (\n                                    <li key={field}>{message}</li>\n                                )\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            )}\n            \n            <form onSubmit={handleSubmit} noValidate>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        className={`form-control ${errors.username ? 'is-invalid' : ''}`}\n                        value={formData.username}\n                        onChange={handleChange}\n                        required\n                    />\n                    {errors.username && (\n                        <div className=\"invalid-feedback\">{errors.username}</div>\n                    )}\n                </div>\n                \n                <div className=\"form-group\">\n                    <label>Email Address</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n                        value={formData.email}\n                        onChange={handleChange}\n                        required\n                    />\n                    {errors.email && (\n                        <div className=\"invalid-feedback\">{errors.email}</div>\n                    )}\n                </div>\n                \n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n                        value={formData.password}\n                        onChange={handleChange}\n                        required\n                    />\n                    {errors.password && (\n                        <div className=\"invalid-feedback\">{errors.password}</div>\n                    )}\n                </div>\n                \n                <div className=\"form-group\">\n                    <label>Full Name (Optional)</label>\n                    <input\n                        type=\"text\"\n                        name=\"fullName\"\n                        className=\"form-control\"\n                        value={formData.fullName}\n                        onChange={handleChange}\n                    />\n                </div>\n                \n                <div className=\"form-group\">\n                    <label>Thapar ID (Optional)</label>\n                    <input\n                        type=\"text\"\n                        name=\"thaparId\"\n                        className=\"form-control\"\n                        value={formData.thaparId}\n                        onChange={handleChange}\n                    />\n                </div>\n                \n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-block mt-3\"\n                    disabled={isLoading}\n                >\n                    {isLoading ? (\n                        <>\n                            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                            <span className=\"ms-2\">Creating account...</span>\n                        </>\n                    ) : 'Create Account'}\n                </button>\n            </form>\n            \n            <div className=\"text-center mt-3\">\n                <span>Already have an account? </span>\n                <Link to=\"/login\" className=\"link-text\">Sign in</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n// import './ProfilePage.css'; // We'll create this CSS file next\n\nconst ProfilePage = () => {\n  const [userData, setUserData] = useState({\n    username: '',\n    email: '',\n    full_name: '',\n    thapar_id: '',\n    created_at: '',\n    query_count: 0,\n    last_query_time: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    full_name: '',\n    email: '',\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          navigate('/login');\n          return;\n        }\n\n        const response = await axios.get('/api/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        setUserData(response.data);\n        setFormData({\n          full_name: response.data.full_name || '',\n          email: response.data.email || '',\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        });\n      } catch (err) {\n        setError(err.response?.data?.message || 'Failed to fetch user data');\n        if (err.response?.status === 401) {\n          localStorage.removeItem('token');\n          navigate('/login');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, [navigate]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (formData.newPassword && formData.newPassword !== formData.confirmPassword) {\n      setError('New passwords do not match');\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      const updateData = {\n        full_name: formData.full_name,\n        email: formData.email\n      };\n\n      if (formData.newPassword) {\n        updateData.currentPassword = formData.currentPassword;\n        updateData.newPassword = formData.newPassword;\n      }\n\n      const response = await axios.put('/api/user', updateData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      setUserData(prev => ({\n        ...prev,\n        full_name: response.data.full_name,\n        email: response.data.email\n      }));\n\n      setEditMode(false);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to update profile');\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('/api/logout', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (err) {\n      console.error('Logout error:', err);\n    } finally {\n      localStorage.removeItem('token');\n      navigate('/login');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading profile data...</p>\n      </div>\n    );\n  }\n\n  if (error && !editMode) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"error-message\">{error}</div>\n        <button onClick={() => window.location.reload()} className=\"retry-button\">\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <h2>User Profile</h2>\n        {!editMode && (\n          <div className=\"profile-actions\">\n            <button onClick={() => setEditMode(true)} className=\"edit-button\">\n              Edit Profile\n            </button>\n            <button onClick={handleLogout} className=\"logout-button\">\n              Logout\n            </button>\n          </div>\n        )}\n      </div>\n\n      {editMode ? (\n        <form onSubmit={handleSubmit} className=\"profile-form\">\n          {error && <div className=\"error-message\">{error}</div>}\n\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input \n              type=\"text\" \n              value={userData.username} \n              disabled \n              className=\"disabled-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Full Name</label>\n            <input\n              type=\"text\"\n              name=\"full_name\"\n              value={formData.full_name}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Thapar ID</label>\n            <input \n              type=\"text\" \n              value={userData.thapar_id} \n              disabled \n              className=\"disabled-input\"\n            />\n          </div>\n\n          <div className=\"password-section\">\n            <h3>Change Password</h3>\n\n            <div className=\"form-group\">\n              <label>Current Password</label>\n              <input\n                type=\"password\"\n                name=\"currentPassword\"\n                value={formData.currentPassword}\n                onChange={handleInputChange}\n                placeholder=\"Leave blank to keep current password\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>New Password</label>\n              <input\n                type=\"password\"\n                name=\"newPassword\"\n                value={formData.newPassword}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Confirm New Password</label>\n              <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={handleInputChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"button\" onClick={() => setEditMode(false)} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"save-button\">\n              Save Changes\n            </button>\n          </div>\n        </form>\n      ) : (\n        <div className=\"profile-details\">\n          <div className=\"profile-avatar\">\n            {userData.username.charAt(0).toUpperCase()}\n          </div>\n\n          <div className=\"detail-row\">\n            <span className=\"detail-label\">Username:</span>\n            <span className=\"detail-value\">{userData.username}</span>\n          </div>\n\n          <div className=\"detail-row\">\n            <span className=\"detail-label\">Full Name:</span>\n            <span className=\"detail-value\">{userData.full_name || 'Not provided'}</span>\n          </div>\n\n          <div className=\"detail-row\">\n            <span className=\"detail-label\">Email:</span>\n            <span className=\"detail-value\">{userData.email}</span>\n          </div>\n\n          <div className=\"detail-row\">\n            <span className=\"detail-label\">Thapar ID:</span>\n            <span className=\"detail-value\">{userData.thapar_id}</span>\n          </div>\n\n          <div className=\"detail-row\">\n            <span className=\"detail-label\">Member Since:</span>\n            <span className=\"detail-value\">\n              {new Date(userData.created_at).toLocaleDateString()}\n            </span>\n          </div>\n\n          <div className=\"stats-section\">\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">{userData.query_count}</span>\n              <span className=\"stat-label\">Queries Made</span>\n            </div>\n\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">\n                {userData.last_query_time \n                  ? new Date(userData.last_query_time).toLocaleDateString() \n                  : 'Never'}\n              </span>\n              <span className=\"stat-label\">Last Query</span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfilePage;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport MainPage from './components/MainPage';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport ProfilePage from './components/ProfilePage.js';\nimport './App.css'\n\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<MainPage />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/signup\" element={<Signup />} />\n                <Route path=\"/profile\" element={<ProfilePage />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n// import ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom'\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nReactDOM.render(\n  <BrowserRouter basename=\"/ThaparENV/WEB/thapargpt-frontend\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["module","exports","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","assign","Object","emptyObject","Component","props","context","updater","this","refs","ComponentDummy","PureComponent","prototype","isReactComponent","setState","partialState","callback","Error","forceUpdate","pureComponentPrototype","constructor","isPureReactComponent","isArrayImpl","Array","isArray","ReactSharedInternals","H","A","T","S","V","hasOwnProperty","ReactElement","type","key","self","source","owner","ref","$$typeof","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","element","index","escaperLookup","replace","match","escape","toString","noop$1","mapIntoArray","children","array","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","_init","_payload","c","push","maybeIterable","nextNamePrefix","i","length","call","next","done","value","then","thenable","status","reason","fulfilledValue","error","resolveThenable","String","keys","join","mapChildren","func","result","count","child","lazyInitializer","payload","_status","ctor","_result","moduleObject","default","reportGlobalError","reportError","window","ErrorEvent","event","bubbles","cancelable","message","dispatchEvent","process","emit","console","noop","Children","map","forEach","forEachFunc","forEachContext","apply","arguments","n","toArray","only","Fragment","Profiler","StrictMode","Suspense","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","__COMPILER_RUNTIME","__proto__","size","useMemoCache","cache","fn","cloneElement","config","propName","childArray","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","childrenLength","defaultProps","createRef","current","forwardRef","render","lazy","memo","compare","startTransition","scope","prevTransition","currentTransition","returnValue","onStartTransitionFinish","unstable_useCacheRefresh","useCacheRefresh","use","usable","useActionState","action","initialState","permalink","useCallback","deps","useContext","Context","useDebugValue","useDeferredValue","initialValue","useEffect","create","createDeps","update","dispatcher","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useOptimistic","passthrough","reducer","useReducer","initialArg","init","useRef","useState","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useTransition","version","cookieNameRegExp","cookieValueRegExp","domainValueRegExp","pathValueRegExp","__toString","NullObject","C","startIndex","str","max","code","charCodeAt","endIndex","min","decode","indexOf","decodeURIComponent","e","React","require","formatProdErrorMessage","url","encodeURIComponent","Internals","d","f","r","D","L","m","X","M","p","findDOMNode","getCrossOriginStringAs","as","input","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","createPortal","container","nodeType","containerInfo","implementation","createPortal$1","flushSync","previousTransition","previousUpdatePriority","preconnect","href","options","crossOrigin","prefetchDNS","preinit","integrity","fetchPriority","precedence","nonce","preinitModule","preload","referrerPolicy","imageSrcSet","imageSizes","media","preloadModule","requestFormReset","form","unstable_batchedUpdates","a","useFormState","useFormStatus","useHostTransitionStatus","jsxProd","maybeKey","jsx","jsxs","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","err","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","defineProperty","enumerable","get","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","inProgress","dataWebpackPrefix","l","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","target","head","appendChild","toStringTag","installedChunks","j","installedChunkData","promise","resolve","reject","errorType","realSrc","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","PopStateEventType","createBrowserHistory","getUrlBasedHistory","window2","globalHistory","pathname","search","hash","location","createLocation","state","usr","to","createPath","invariant","warning","cond","warn","getHistoryState","idx","parsePath","Math","random","substring","_ref","charAt","path","parsedPath","hashIndex","searchIndex","getLocation","createHref2","validateLocation","defaultView","v5Compat","history","listener","getIndex","handlePop","nextIndex","delta","createURL","createBrowserURLImpl","replaceState","listen","addEventListener","removeEventListener","createHref","encodeLocation","historyState","pushState","DOMException","go","isAbsolute","base","origin","href2","startsWith","URL","WeakMap","matchRoutes","routes","locationArg","matchRoutesImpl","basename","allowPartial","stripBasename","branches","flattenRoutes","sort","b","score","siblings","slice","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","joinPaths","concat","computeScore","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","compilePath","captureGroups","memo2","_ref2","paramName","splatValue","regexpSource","_","RegExp","v","toLowerCase","nextChar","getInvalidPathError","char","field","dest","JSON","stringify","getPathContributingMatches","getResolveToMatches","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","Set","DataRouterContext","displayName","DataRouterStateContext","ViewTransitionContext","isTransitioning","FetchersContext","Map","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React2","useLocation","navigateEffectWarning","useIsomorphicLayoutEffect","cb","static","useNavigate","router","useDataRouterContext","useCurrentRouteId","activeRef","navigate","async","fromRouteId","useNavigateStable","dataRouterContext","navigator","routePathnamesJson","parse","relative","useNavigateUnstable","useResolvedPath","useRoutesImpl","dataRouterState","future","isStatic","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","style","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","routeContext","component","RenderedRoute","_ref1","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","errors","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","errors2","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","matches2","getChildren","getDataRouterConsoleError","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","routeId","alreadyWarned","React3","_ref12","Route","_props","Router","_ref15","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref16","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","defaultMethod","defaultEncType","isHtmlElement","tagName","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","has","getFormSubmissionInfo","method","formData","body","attr","FormData","isButtonElement","isInputElement","isFormDataSubmitterSupported","prefix","append","invariant2","loadRouteModule","routeModulesCache","routeModule","import","__reactRouterContext","isSpaMode","reload","isPageLinkDescriptor","page","isHtmlLinkDescriptor","rel","getNewMatchesForLinks","nextMatches","currentMatches","manifest","mode","isNew","matchPathChanged","manifestRoute","hasLoader","routeChoice","currentUrl","currentParams","nextUrl","nextParams","defaultShouldRevalidate","getModuleLinkHrefs","includeHydrateFallback","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","flat","dedupeLinkDescriptors","descriptors","preloads","set","preloadsSet","deduped","descriptor","sorted","sortKeys","add","link","createHtml","html","__html","getOwnPropertyNames","globalThis","NO_BODY_STATUS_CODES","singleFetchUrl","reqUrl","React5","RemixRootDefaultErrorBoundary","_ref21","isOutsideRemixApp","errorInstance","heyDeveloper","dangerouslySetInnerHTML","BoundaryShell","title","fontSize","errorString","background","color","overflow","_ref22","renderScripts","routeModules","useFrameworkContext","root","Layout","lang","charSet","content","fontFamily","Scripts","isFogOfWarEnabled","routeDiscovery","ssr","useDataRouterContext2","React9","useDataRouterStateContext","FrameworkContext","composeEventHandlers","theirHandler","ourHandler","defaultPrevented","getActiveMatches","isHydrated","errorIdx","PrefetchPageLinks","_ref28","dataLinkProps","PrefetchPageLinksImpl","useKeyedPrefetchLinks","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","mod","links","getKeyedPrefetchLinks","_ref29","linkProps","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","m2","hasClientLoader","searchParams","moduleHrefs","_ref30","serverHandoffString","renderMeta","routerMatches","enableFogOfWar","didRenderScripts","initialScripts","contextScript","routeModulesScript","hmr","routeIndex","routeVarName","manifestEntry","clientMiddlewareModule","chunks","varName","chunk","_ref25","sri","routeIds","Boolean","initialRoutes","acc","getPartialManifest","entry","suppressHydrationWarning","mergeRefs","_len3","_key3","isBrowser","__reactRouterVersion","BrowserRouter","_ref31","historyRef","React10","setStateImpl","newState","ABSOLUTE_URL_REGEX2","Link","_ref34","forwardedRef","absoluteHref","onClick","discover","prefetch","reloadDocument","replace2","preventScrollReset","viewTransition","isExternal","targetUrl","protocol","joinedPathname","useHref","shouldPrefetch","prefetchRef","prefetchHandlers","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","observer","IntersectionObserver","entries","isIntersecting","threshold","observe","disconnect","setIntent","cancelIntent","usePrefetchBehavior","internalOnClick","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","_ref35","ariaCurrentProp","className","classNameProp","styleProp","routerState","opts","vtContext","useDataRouterContext3","currentPath","currentLocation","nextPath","nextLocation","useViewTransitionState","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Form","_ref36","fetcherKey","onSubmit","submit","useSubmit","formAction","URLSearchParams","indexValues","getAll","delete","qs","useFormAction","formMethod","submitter","nativeEvent","submitMethod","currentTarget","getDataRouterConsoleError2","fetcherId","getUniqueFetcherId","currentRouteId","fetch","formEncType","thisArg","getPrototypeOf","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","len","findKey","_key","_global","global","isContextDefined","isTypedArray","TypedArray","Uint8Array","isHTMLForm","isRegExp","reduceDescriptors","getOwnPropertyDescriptors","reducedDescriptors","ret","defineProperties","isAsyncFn","_setImmediate","setImmediateSupported","postMessageSupported","setImmediate","token","callbacks","postMessage","asap","queueMicrotask","nextTick","isBuffer","isFormData","kind","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","extend","trim","stripBOM","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","searchString","position","lastIndex","arr","forEachEntry","_iterator","pair","matchAll","regExp","exec","hasOwnProp","freezeMethods","writable","toObjectSet","arrayOrString","delimiter","define","toCamelCase","p1","p2","toUpperCase","toFiniteNumber","Number","isFinite","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","catch","isIterable","AxiosError","response","captureStackTrace","utils","toJSON","description","number","fileName","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","predicates","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","isFlatArray","el","exposedHelpers","build","encode","charMap","AxiosURLSearchParams","_pairs","toFormData","encoder","_encode","buildURL","serialize","serializeFn","serializedParams","hashmarkIndex","handlers","fulfilled","rejected","synchronous","runWhen","eject","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","classes","protocols","hasBrowserEnv","_navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","parseHeaders","tokens","tokensRE","parseTokens","deleted","deleteHeader","normalize","format","normalized","w","formatHeader","_len","targets","asStrings","getSetCookie","computed","_len2","_key2","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","ERR_BAD_REQUEST","floor","samplesCount","bytes","timestamps","firstSampleTS","tail","chunkLength","now","Date","startedAt","bytesCount","passed","round","freq","lastArgs","timer","timestamp","invoke","args","flush","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","throttle","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","progressEventDecorator","throttled","asyncDecorator","isMSIE","host","port","userAgent","write","expires","domain","secure","cookie","toGMTString","read","remove","buildFullPath","baseURL","requestedURL","allowAbsoluteUrls","isRelativeUrl","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","password","unescape","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","onloadend","responseHeaders","getAllResponseHeaders","responseText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","aborted","parseProtocol","send","composeSignals","signals","controller","AbortController","streamChunk","chunkSize","byteLength","pos","readStream","stream","asyncIterator","reader","getReader","trackStream","onProgress","onFinish","iterable","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","res","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","_request","getBodyLength","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhr","xhrAdapter","fetchAdapter","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","formatMessage","opt","desc","ERR_DEPRECATED","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","dummy","boolean","function","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","Cancel","spread","isAxiosError","formToJSON","getAdapter","MainPage","_user$full_name","_user$full_name$charA","user","setUser","query","setQuery","setResponse","setHistory","isLoading","setIsLoading","setError","localStorage","getItem","userRes","Authorization","processedHistory","queries","item","query_text","response_text","created_at","_err$response","removeItem","fetchData","_jsxs","styles","mainContainer","logo","width","height","viewBox","fill","_jsx","stroke","strokeWidth","userActions","avatar","UserProfile","full_name","btn","handleLogout","chatContainer","queryPanel","panelHeader","log","post","apiResponse","answer","text","newHistoryItem","errorMessage","_err$response$data","_err$response$data2","queryTextarea","onChange","placeholder","disabled","_Fragment","spinner","responsePanel","responseContent","textMuted","historySection","historyList","historyItem","historyQuery","historyResponse","historyDate","toLocaleString","loading","Login","email","setEmail","setPassword","setItem","Signup","setFormData","fullName","thaparId","setErrors","handleChange","validateForm","valid","newErrors","thapar_id","success","details","noValidate","role","ProfilePage","userData","setUserData","query_count","last_query_time","setLoading","editMode","setEditMode","currentPassword","newPassword","confirmPassword","_err$response2","fetchUserData","handleInputChange","updateData","put","_err$response3","_err$response3$data","toLocaleDateString","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","App","getElementById","reportWebVitals"],"sourceRoot":""}